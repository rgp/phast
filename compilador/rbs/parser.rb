#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Instrucciones'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 147)

    def initialize(scanner)
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en anÃ¡lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []



        #Eliminar ?
        @latest_var = nil #Ultima variable utilizada
        @output = {}

    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @latest_var = @scope_actual.variables[cual]
        else
            @latest_var = guarda_var cual
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        @scopes[:constantes].variables[nombre]
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 #TODO
        @mem_offset = 0 #TODO

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = scope_constantes.variables.length
        #Correr variables
        scope_global.variables.each do |k,v|
            v.direccion_virtual += @mem_offset
        end
        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        puts @salida

    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado", val.inspect, token_to_str(t) || '?')
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    21,     2,    22,   114,    31,   111,    24,    26,    27,
    28,   146,    75,    76,    79,    80,   146,    79,    80,    75,
    76,    32,   188,   108,    29,    30,    83,    84,    32,   107,
   101,   119,    33,    34,    35,    36,    37,    38,    13,    21,
   120,    22,    88,    31,    37,    24,    26,    27,    28,    37,
    65,    66,    67,    68,    69,    70,    71,    72,    97,   125,
   126,    93,    29,    30,   129,   130,    32,   131,   136,   137,
    33,    34,    35,    36,    37,    38,    13,    21,   139,    22,
   140,    31,   141,    24,    26,    27,    28,    31,    92,    24,
    26,    27,    28,   112,    90,    88,    86,    85,   152,   153,
    29,    30,    61,   155,    32,   157,    29,    30,    33,    34,
    35,    36,    37,    38,    13,    21,   158,    22,    60,    31,
   162,    24,    26,    27,    28,    65,    66,    67,    68,    69,
    70,    71,    72,    59,    56,   165,   -41,   168,    29,    30,
    42,   171,    32,   136,   174,   175,    33,    34,    35,    36,
    37,    38,    13,    21,   176,    22,   177,    31,   179,    24,
    26,    27,    28,   180,    40,   184,    39,   189,   190,   157,
     3,   168,   194,   nil,   nil,   nil,    29,    30,   nil,   nil,
    32,   nil,   nil,   nil,    33,    34,    35,    36,    37,    38,
    13,    21,   nil,    22,   nil,    31,   nil,    24,    26,    27,
    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,    30,   nil,   nil,    32,   nil,
   nil,   nil,    33,    34,    35,    36,    37,    38,    13,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    30,   nil,   nil,    32,   nil,   nil,   nil,
    33,    34,    35,    36,    37,    38,    13,    21,   nil,    22,
   nil,    31,   nil,    24,    26,    27,    28,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    29,    30,   nil,   nil,    32,   nil,   nil,   nil,    33,    34,
    35,    36,    37,    38,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    30,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,   nil,
   nil,   nil,    29,    30,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    30,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    30,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,   nil,
   nil,   nil,    29,    30,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    30,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    30,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,   nil,
   nil,   nil,    29,    30,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    30,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    30,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,    21,
   nil,    22,   nil,    31,   nil,    24,    26,    27,    28,   nil,
   nil,   nil,    29,    30,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    30,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,    21,   nil,    22,   nil,    31,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    30 ]

racc_action_check = [
   188,   188,     0,   188,    96,   188,    94,   188,   188,   188,
   188,   144,    45,    45,    46,    46,   130,   134,   134,   133,
   133,   181,   181,    91,   188,   188,    49,    49,   188,    90,
    81,   103,   188,   188,   188,   188,   188,   188,   152,   152,
   104,   152,   106,   152,   144,   152,   152,   152,   152,   130,
   132,   132,   132,   132,   132,   132,   132,   132,    62,   109,
   110,    58,   152,   152,   112,   113,   152,   114,   121,   124,
   152,   152,   152,   152,   152,   152,     2,     2,   126,     2,
   127,     2,   128,     2,     2,     2,     2,   157,    57,   157,
   157,   157,   157,    95,    54,    53,    52,    51,   138,   139,
     2,     2,    38,   141,     2,   142,   157,   157,     2,     2,
     2,     2,     2,     2,    93,    93,   143,    93,    37,    93,
   151,    93,    93,    93,    93,    44,    44,    44,    44,    44,
    44,    44,    44,    36,    32,   154,    22,   156,    93,    93,
     6,   160,    93,   161,   162,   163,    93,    93,    93,    93,
    93,    93,   177,   177,   164,   177,   165,   177,   168,   177,
   177,   177,   177,   170,     4,   178,     3,   182,   183,   185,
     1,   191,   192,   nil,   nil,   nil,   177,   177,   nil,   nil,
   177,   nil,   nil,   nil,   177,   177,   177,   177,   177,   177,
   155,   155,   nil,   155,   nil,   155,   nil,   155,   155,   155,
   155,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   155,   155,   nil,   nil,   155,   nil,
   nil,   nil,   155,   155,   155,   155,   155,   155,   137,   137,
   nil,   137,   nil,   137,   nil,   137,   137,   137,   137,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   137,   137,   nil,   nil,   137,   nil,   nil,   nil,
   137,   137,   137,   137,   137,   137,     5,     5,   nil,     5,
   nil,     5,   nil,     5,     5,     5,     5,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,     5,   nil,   nil,     5,   nil,   nil,   nil,     5,     5,
     5,     5,     5,     5,   140,   nil,   140,   nil,   140,   nil,
   140,   140,   140,   140,    31,   nil,    31,   nil,    31,   nil,
    31,    31,    31,    31,   nil,   nil,   nil,   140,   140,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,    31,    13,
   nil,    13,   nil,    13,   nil,    13,    13,    13,    13,   153,
   nil,   153,   nil,   153,   nil,   153,   153,   153,   153,   nil,
   nil,   nil,    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   153,   153,    99,   nil,    99,   nil,    99,   nil,
    99,    99,    99,    99,   100,   nil,   100,   nil,   100,   nil,
   100,   100,   100,   100,   nil,   nil,   nil,    99,    99,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   100,    88,
   nil,    88,   nil,    88,   nil,    88,    88,    88,    88,    47,
   nil,    47,   nil,    47,   nil,    47,    47,    47,    47,   nil,
   nil,   nil,    88,    88,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    47,   107,   nil,   107,   nil,   107,   nil,
   107,   107,   107,   107,    92,   nil,    92,   nil,    92,   nil,
    92,    92,    92,    92,   nil,   nil,   nil,   107,   107,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,    92,   136,
   nil,   136,   nil,   136,   nil,   136,   136,   136,   136,    85,
   nil,    85,   nil,    85,   nil,    85,    85,    85,    85,   nil,
   nil,   nil,   136,   136,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    85,    85,    84,   nil,    84,   nil,    84,   nil,
    84,    84,    84,    84,   102,   nil,   102,   nil,   102,   nil,
   102,   102,   102,   102,   nil,   nil,   nil,    84,    84,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,   102,    56,
   nil,    56,   nil,    56,   nil,    56,    56,    56,    56,   111,
   nil,   111,   nil,   111,   nil,   111,   111,   111,   111,   nil,
   nil,   nil,    56,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   111,   111,    59,   nil,    59,   nil,    59,   nil,
    59,    59,    59,    59,    98,   nil,    98,   nil,    98,   nil,
    98,    98,    98,    98,   nil,   nil,   nil,    59,    59,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    98,    98 ]

racc_action_pointer = [
     0,   170,    71,   166,   161,   261,   136,   nil,   nil,   nil,
   nil,   nil,   nil,   333,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   130,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   308,   128,   nil,   nil,   nil,   127,   110,    94,   nil,
   nil,   nil,   nil,   nil,   108,   -13,   -13,   413,   nil,    17,
   nil,    91,    85,    79,    63,   nil,   543,    82,    27,   578,
   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,   nil,   508,   483,   nil,   nil,   403,   nil,
    -3,    16,   448,   109,     2,    87,   -39,   nil,   588,   368,
   378,   nil,   518,    20,    33,   nil,    26,   438,   nil,    52,
    25,   553,    56,    31,    59,   nil,   nil,   nil,   nil,   nil,
   nil,    52,   nil,   nil,    35,   nil,    41,    76,    75,   nil,
     8,   nil,    33,    -6,   -10,   nil,   473,   223,    64,    93,
   298,    69,    74,    81,     3,   nil,   nil,   nil,   nil,   nil,
   nil,    85,    33,   343,   128,   185,   121,    77,   nil,   nil,
   132,   127,   108,   110,   147,   122,   nil,   nil,   150,   nil,
   159,   nil,   nil,   nil,   nil,   nil,   nil,   147,   130,   nil,
   nil,   -12,   163,   133,   nil,   138,   nil,   nil,    -5,   nil,
   nil,   155,   137,   nil,   nil ]

racc_action_default = [
  -119,  -119,    -3,  -119,  -119,    -3,  -119,    -5,    -6,    -7,
    -8,    -9,   -10,  -119,   -13,   -14,   -15,   -21,   -27,   -33,
   -34,   -35,   -38,   -47,   -48,   -49,   -50,   -51,   -52,   -71,
   -72,   -75,  -119,   -89,   -92,   -95,  -119,  -119,  -119,   195,
    -1,    -2,    -4,   -11,   -20,   -26,   -32,  -119,   -37,   -46,
   -40,  -119,  -119,   -77,   -80,   -81,  -119,  -119,  -119,  -119,
   -97,  -100,  -119,   -16,   -17,   -59,   -60,   -61,   -62,   -63,
   -64,   -65,   -66,   -22,   -23,   -67,   -68,   -28,   -29,   -69,
   -70,  -119,   -39,   -43,  -119,   -55,   -73,   -74,  -119,   -78,
  -119,  -119,  -119,    -3,  -119,  -119,  -110,   -12,  -119,  -119,
  -119,   -36,  -119,  -119,  -119,   -53,   -77,  -119,   -82,  -119,
  -119,  -119,  -113,  -119,  -119,   -18,   -24,   -30,   -44,   -45,
   -42,   -58,   -76,   -79,  -119,   -90,  -119,  -119,  -119,  -111,
  -103,  -109,   -20,   -26,   -32,   -54,  -119,    -3,  -119,  -119,
  -119,  -119,  -118,  -119,  -103,  -104,  -105,   -19,   -25,   -31,
   -56,  -119,    -3,  -119,  -119,    -3,  -116,  -119,  -101,  -102,
  -108,   -58,   -86,  -119,  -119,  -119,   -98,  -112,  -119,  -117,
  -119,  -107,   -57,   -83,   -84,   -91,   -93,    -3,  -119,  -114,
  -106,  -119,  -119,  -119,   -99,  -118,   -85,   -87,    -3,   -94,
   -96,  -116,  -119,  -115,   -88 ]

racc_goto_table = [
     4,    43,    53,    41,    77,    63,    73,    87,   156,   135,
   167,    94,   143,   145,   102,    99,   133,   117,   116,    55,
    46,   100,   134,   169,    47,    48,   159,   145,    82,    50,
    49,   104,    51,    45,   132,    81,   121,   161,    52,    98,
    44,   123,    89,   173,    91,   193,   124,   186,   181,   172,
   115,   191,    57,   138,    58,   182,   128,    95,   178,   106,
   122,   113,    62,    96,   170,   160,   187,     1,   142,   185,
   nil,   nil,   103,   105,   nil,   nil,    55,   nil,   nil,   nil,
   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   118,   110,   149,   147,   148,    55,   nil,   nil,   nil,   127,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   150,   nil,   nil,   nil,   154,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   nil,   nil,   nil,   nil,
   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   163,   nil,   nil,   166,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   183,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   192 ]

racc_goto_check = [
     2,     4,    48,     2,    27,    15,    21,    49,    69,    44,
    70,    14,    64,    12,    41,    24,    25,    26,    20,     4,
    28,    30,    31,    33,    34,    35,    64,    12,    36,    37,
    38,    39,    40,    22,    19,     4,    45,    46,    47,    18,
    16,    50,    51,    52,     4,    70,    53,    54,    55,    44,
    14,    69,    56,    57,    58,    59,    60,    61,    62,    48,
    49,    63,    11,    65,    67,    68,     8,     1,    71,    72,
   nil,   nil,     4,     4,   nil,   nil,     4,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     2,    27,    15,    21,     4,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    67,    -2,   nil,   -12,   nil,   nil,   nil,  -115,   nil,
   nil,    19,  -117,   nil,   -48,   -39,    24,   nil,   -25,   -81,
   -81,   -39,    16,   nil,   -59,  -100,   -83,   -42,     2,   nil,
   -57,   -95,   nil,  -134,     3,     3,   -21,     7,     8,   -54,
    10,   -69,   nil,   nil,  -112,   -69,  -113,     7,   -29,   -46,
   -66,   -12,  -119,   -62,  -134,  -126,    19,   -72,    20,  -121,
   -56,    -3,  -108,   -35,  -118,     2,   nil,   -96,   -81,  -134,
  -146,   -61,  -110 ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    10,    11,
    12,   nil,    14,    15,    16,   nil,   nil,    64,   nil,   nil,
    17,   nil,   nil,    74,   nil,   nil,    18,   nil,   nil,    78,
   nil,   nil,    19,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    25,   nil,   nil,   nil,   nil,   nil,   nil,
    54,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   144,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 45, :_reduce_1,
  2, 46, :_reduce_none,
  0, 46, :_reduce_none,
  2, 47, :_reduce_4,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_10,
  0, 55, :_reduce_11,
  4, 47, :_reduce_12,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  0, 60, :_reduce_15,
  3, 48, :_reduce_none,
  0, 62, :_reduce_17,
  0, 63, :_reduce_18,
  5, 59, :_reduce_none,
  0, 59, :_reduce_none,
  0, 66, :_reduce_21,
  3, 58, :_reduce_none,
  0, 68, :_reduce_23,
  0, 69, :_reduce_24,
  5, 65, :_reduce_none,
  0, 65, :_reduce_none,
  0, 72, :_reduce_27,
  3, 64, :_reduce_none,
  0, 74, :_reduce_29,
  0, 75, :_reduce_30,
  5, 71, :_reduce_none,
  0, 71, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_34,
  0, 78, :_reduce_35,
  4, 70, :_reduce_36,
  2, 76, :_reduce_none,
  0, 82, :_reduce_38,
  2, 79, :_reduce_none,
  1, 79, :_reduce_none,
  0, 84, :_reduce_41,
  4, 81, :_reduce_42,
  0, 85, :_reduce_43,
  3, 80, :_reduce_44,
  3, 80, :_reduce_none,
  0, 80, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_48,
  1, 77, :_reduce_none,
  1, 77, :_reduce_50,
  1, 77, :_reduce_51,
  1, 77, :_reduce_52,
  0, 89, :_reduce_53,
  3, 83, :_reduce_none,
  0, 83, :_reduce_none,
  0, 90, :_reduce_56,
  4, 88, :_reduce_none,
  0, 88, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 86, :_reduce_71,
  1, 86, :_reduce_72,
  3, 87, :_reduce_none,
  2, 91, :_reduce_none,
  0, 91, :_reduce_none,
  3, 93, :_reduce_none,
  0, 93, :_reduce_none,
  2, 92, :_reduce_none,
  3, 95, :_reduce_none,
  0, 95, :_reduce_none,
  1, 94, :_reduce_none,
  0, 97, :_reduce_82,
  9, 52, :_reduce_83,
  0, 99, :_reduce_84,
  3, 96, :_reduce_none,
  0, 96, :_reduce_none,
  1, 98, :_reduce_none,
  3, 98, :_reduce_none,
  0, 100, :_reduce_89,
  0, 101, :_reduce_90,
  9, 49, :_reduce_91,
  0, 102, :_reduce_92,
  0, 103, :_reduce_93,
  11, 50, :_reduce_none,
  1, 51, :_reduce_none,
  11, 53, :_reduce_none,
  0, 105, :_reduce_97,
  0, 106, :_reduce_98,
  10, 56, :_reduce_none,
  0, 109, :_reduce_100,
  7, 57, :_reduce_none,
  2, 108, :_reduce_none,
  0, 108, :_reduce_none,
  1, 110, :_reduce_104,
  0, 112, :_reduce_105,
  4, 110, :_reduce_none,
  1, 111, :_reduce_none,
  0, 111, :_reduce_none,
  2, 107, :_reduce_none,
  0, 107, :_reduce_none,
  0, 115, :_reduce_111,
  4, 104, :_reduce_none,
  0, 104, :_reduce_none,
  0, 116, :_reduce_114,
  5, 114, :_reduce_none,
  0, 114, :_reduce_none,
  2, 113, :_reduce_117,
  0, 113, :_reduce_none ]

racc_reduce_n = 119

racc_shift_n = 195

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  :OP_ASIGN => 9,
  "[" => 10,
  "]" => 11,
  :STRING => 12,
  :WORD_TRUE => 13,
  :WORD_FALSE => 14,
  :WORD_NULL => 15,
  "," => 16,
  :OP_EQUAL => 17,
  :OP_NOT_EQUAL => 18,
  :OP_GREATER => 19,
  :OP_GREATER_EQUAL => 20,
  :OP_LESS => 21,
  :OP_LESS_EQUAL => 22,
  :WORD_AND => 23,
  :WORD_OR => 24,
  :OP_PLUS => 25,
  :OP_MINUS => 26,
  :OP_MULTIPLY => 27,
  :OP_DIVIDE => 28,
  :INT => 29,
  :FLOAT => 30,
  "=" => 31,
  ">" => 32,
  :WORD_IF => 33,
  "{" => 34,
  "}" => 35,
  :WORD_ELSE => 36,
  :WORD_WHILE => 37,
  :WORD_DO => 38,
  :VERBOSE_BLOCK => 39,
  :WORD_FOR => 40,
  :WORD_FUN => 41,
  :WORD_CLASS => 42,
  :WORD_EXTENDS => 43 }

racc_nt_base = 44

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "OP_ASIGN",
  "\"[\"",
  "\"]\"",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "\"=\"",
  "\">\"",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "VERBOSE_BLOCK",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "@11",
  "tipo_llamada",
  "vars",
  "funcs",
  "@12",
  "argumentos",
  "@13",
  "@14",
  "numero",
  "arreglo",
  "args_aux",
  "@15",
  "@16",
  "arr_elems",
  "arr_elem",
  "arr_elems_aux",
  "arr_val",
  "arr_elem_aux",
  "else",
  "@17",
  "aux_else",
  "@18",
  "@19",
  "@20",
  "@21",
  "@22",
  "params",
  "@23",
  "@24",
  "class_extras",
  "class_body",
  "@25",
  "class_body_aux",
  "class_def_var_aux",
  "@26",
  "def_param",
  "params_aux",
  "@27",
  "@28" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_4(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_10(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_11(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_34(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_35(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_36(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_38(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_41(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_42(val, _values, result)
     fun_call 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_43(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_44(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_48(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_50(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_51(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_52(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_53(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_56(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_71(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_72(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_82(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_83(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_84(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_89(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_90(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_91(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_92(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_93(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_97(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_98(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_100(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_104(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_105(val, _values, result)
     llame_var @curr_token[1] 
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_111(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_114(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_117(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 118 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
