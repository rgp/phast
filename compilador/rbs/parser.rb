#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Arr'
require_relative 'lib/Instrucciones'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 152)

    def initialize(scanner,output = "bin.pho")
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en an치lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []
        
        @pArr = []

        @verboseCount = 0;
        @outfile = output


    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def pre_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        var = llame_var @curr_token[1]

        # Partiendo de que ++a === (a=a+1) =>
        fun4 # Metemos fondo falso
        @pOperandos.push var # Metemos "a"
        @pOper.push Phast.op_to_inst("=")  #fun2 metemos "="
        fun1 var  # Metemos "a"
        @pOper.push Phast.op_to_inst(op)  #fun2 metemos suma o resta
        @pOperandos.push uno  # metemos el 1
        fun3_aux # generamos cu치druplo de suma
        fun3 3 # Generamos cu치druplo de asignaci칩n de resultado en var
        fun5 # Quitamos fondo falso
    end

    def post_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        val_actual = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push val_actual
        mas_uno = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push mas_uno
        var = @pOperandos.pop
        @pOperandos.push val_actual
        genera(Phast::ASIG, var, nil, val_actual)
        genera(Phast.op_to_inst(op), var, uno, mas_uno) # incrementa/decrementa
        genera(Phast::ASIG, mas_uno, nil, var)
    end

    def load_arr
        arr_id = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp
        genera(Phast::ARRLD,arr_id,nil,tmp)
    end

    def access_array_index
        arr_index = @pOperandos.pop
        arr_tmp = @pOperandos.last
        genera(Phast::ARRVAL,arr_index,arr_tmp,nil) # VAL RNG
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        genera(Phast::ARRIND,arr_tmp,arr_index,tmp)
        @pOperandos.push tmp
    end

    def openArreglo
        tmp = ArrDefinition.new(Var.new(nil,nil,nil,@scope_actual.temporales.length,nil))
        @scope_actual.temporales.push tmp.id
        @pArr.push tmp
    end

    def closeArreglo
        arr = @pArr.pop
        genera(Phast::ARRDEC,arr.length,nil,arr.id)
        arr.initQuads.each do |q|
            @scope_actual.quads.push q
        end
        @pOperandos.push arr.id
    end

    def copy_value
        de = @pOperandos.pop
        @pArr.last.initQuads.push Quad.new(Phast::ARRINI, de, @pArr.last.id, @pArr.last.length)
        @pArr.last.length += 1
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @scope_actual.variables[cual]
        else
            if @pArr.last != nil
                guarda_cte("NULL",nil,0)
            else
                guarda_var cual
            end
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        cte = @scopes[:constantes].variables[nombre]
        return cte
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre, is_class = false
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        elsif(cual == "println")
            genera(Phast::PRTLN,nil,nil,nil)
        elsif(cual == "link")
            genera(Phast::LNK,nil,nil,nil)
        elsif(cual == "link_hard")
            genera(Phast::LNKH,nil,nil,nil)
        elsif(cual == "exists")
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::EXST,nil,nil,tmp)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::XOR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 #TODO
        @mem_offset = 0 #TODO

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = 0 #scope_constantes.variables.length
        #Correr variables
        # scope_global.variables.each do |k,v|
        #     v.direccion_virtual += @mem_offset
        # end

        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        # puts @salida
        # print @salida
        write_file @salida
        puts "Compiled #{$lineno} lines."
    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def write_file(lines)
        fout = File.open(@outfile, 'w')
        # fout.puts lines
        lines.each do |l|
            fout.puts l.to_s + "\0"
        end
        fout.close
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado en la linea #{$lineno}", val.inspect, token_to_str(t) || '?')
    end

    def verbose (v)
        v_exec = guarda_cte "verbose"+String(@verboseCount), String(v), 4
        @verboseCount += 1
        genera(Phast::VERB, nil, nil, v_exec)
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    22,   -52,    23,    24,    25,   -87,    79,    80,    27,
    28,    29,    30,    13,    22,   118,    23,    24,    25,   -87,
   158,   116,    27,    28,    29,    30,   158,    33,    34,    36,
    83,    84,   122,    37,    38,    39,    40,    41,    42,   123,
    33,    34,    36,    79,    80,   125,    37,    38,    39,    40,
    41,    42,    13,    22,    41,    23,    24,    25,   -87,   112,
    41,    27,    28,    29,    30,    13,    22,   111,    23,    24,
    25,   -87,    36,   202,    27,    28,    29,    30,   110,    33,
    34,    36,    83,    84,    92,    37,    38,    39,    40,    41,
    42,   108,    33,    34,    36,   131,   104,   135,    37,    38,
    39,    40,    41,    42,    13,    22,   136,    23,    24,    25,
   -87,   100,   139,    27,    28,    29,    30,    13,    22,   140,
    23,    24,    25,   -87,   141,   147,    27,    28,    29,    30,
   118,    33,    34,    36,   149,   151,   152,    37,    38,    39,
    40,    41,    42,   153,    33,    34,    36,    99,    93,    64,
    37,    38,    39,    40,    41,    42,    13,    22,    63,    23,
    24,    25,   -87,   162,    62,    27,    28,    29,    30,    13,
    22,    59,    23,    24,    25,   -87,   165,   166,    27,    28,
    29,    30,    58,    33,    34,    36,   168,   170,   171,    37,
    38,    39,    40,    41,    42,    57,    33,    34,    36,   119,
   176,    56,    37,    38,    39,    40,    41,    42,    22,   -44,
    23,    24,    25,   179,    46,   182,    27,    28,    29,    30,
    22,    44,    23,    24,    25,   185,   147,   188,    27,    28,
    29,    30,   189,   190,    33,    34,   191,   -48,   -50,   -52,
    22,    92,    23,    24,    25,   193,    33,    34,    27,    28,
    29,    30,    22,   194,    23,    24,    25,    43,   198,     2,
    27,    28,    29,    30,   203,   204,    33,    34,   170,     3,
   182,   208,    22,   nil,    23,    24,    25,   nil,    33,    34,
    27,    28,    29,    30,    22,   nil,    23,    24,    25,   nil,
   nil,   nil,    27,    28,    29,    30,   nil,   nil,    33,    34,
   nil,   nil,   nil,   nil,    22,   nil,    23,    24,    25,   nil,
    33,    34,    27,    28,    29,    30,    22,   nil,    23,    24,
    25,   nil,   nil,   nil,    27,    28,    29,    30,   nil,   nil,
    33,    34,   nil,   nil,   nil,   nil,    22,   nil,    23,    24,
    25,   nil,    33,    34,    27,    28,    29,    30,    22,   nil,
    23,    24,    25,   nil,   nil,   nil,    27,    28,    29,    30,
   nil,   nil,    33,    34,   nil,   nil,   nil,   nil,    22,   nil,
    23,    24,    25,   nil,    33,    34,    27,    28,    29,    30,
    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,    28,
    29,    30,   nil,   nil,    33,    34,    68,    69,    70,    71,
    72,    73,    74,    75,    76,   nil,    33,    34,    22,   nil,
    23,    24,    25,   nil,   -90,   nil,    27,    28,    29,    30,
    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,    28,
    29,    30,   nil,   nil,    33,    34,   nil,   nil,   nil,   nil,
    22,   nil,    23,    24,    25,   -87,    33,    34,    27,    28,
    29,    30,    22,   nil,    23,    24,    25,   nil,   nil,   nil,
    27,    28,    29,    30,   nil,   nil,    33,    34,    27,    28,
    29,    30,    22,   nil,    23,    24,    25,   nil,    33,    34,
    27,    28,    29,    30,   nil,   nil,    33,    34,    68,    69,
    70,    71,    72,    73,    74,    75,    76,   nil,    33,    34 ]

racc_action_check = [
     2,     2,   162,     2,     2,     2,     2,   143,   143,     2,
     2,     2,     2,   202,   202,    95,   202,   202,   202,   202,
   156,    94,   202,   202,   202,   202,   140,     2,     2,     2,
   144,   144,   101,     2,     2,     2,     2,     2,     2,   102,
   202,   202,   202,    49,    49,   103,   202,   202,   202,   202,
   202,   202,   100,   100,   156,   100,   100,   100,   100,    91,
   140,   100,   100,   100,   100,   191,   191,    90,   191,   191,
   191,   191,   195,   195,   191,   191,   191,   191,    89,   100,
   100,   100,    50,    50,    87,   100,   100,   100,   100,   100,
   100,    85,   191,   191,   191,   114,    65,   120,   191,   191,
   191,   191,   191,   191,   165,   165,   121,   165,   165,   165,
   165,    61,   123,   165,   165,   165,   165,   149,   149,   124,
   149,   149,   149,   149,   125,   132,   149,   149,   149,   149,
   133,   165,   165,   165,   134,   136,   137,   165,   165,   165,
   165,   165,   165,   138,   149,   149,   149,    60,    55,    42,
   149,   149,   149,   149,   149,   149,   168,   168,    41,   168,
   168,   168,   168,   145,    40,   168,   168,   168,   168,     5,
     5,    36,     5,     5,     5,     5,   150,   151,     5,     5,
     5,     5,    35,   168,   168,   168,   153,   154,   155,   168,
   168,   168,   168,   168,   168,    25,     5,     5,     5,    98,
   164,    24,     5,     5,     5,     5,     5,     5,   147,    23,
   147,   147,   147,   167,     6,   169,   147,   147,   147,   147,
   152,     4,   152,   152,   152,   173,   175,   176,   152,   152,
   152,   152,   177,   178,   147,   147,   179,    53,    53,    53,
    13,    53,    13,    13,    13,   182,   152,   152,    13,    13,
    13,    13,   166,   184,   166,   166,   166,     3,   192,     0,
   166,   166,   166,   166,   196,   197,    13,    13,   199,     1,
   205,   206,   105,   nil,   105,   105,   105,   nil,   166,   166,
   105,   105,   105,   105,   106,   nil,   106,   106,   106,   nil,
   nil,   nil,   106,   106,   106,   106,   nil,   nil,   105,   105,
   nil,   nil,   nil,   nil,   107,   nil,   107,   107,   107,   nil,
   106,   106,   107,   107,   107,   107,   112,   nil,   112,   112,
   112,   nil,   nil,   nil,   112,   112,   112,   112,   nil,   nil,
   107,   107,   nil,   nil,   nil,   nil,    62,   nil,    62,    62,
    62,   nil,   112,   112,    62,    62,    62,    62,    51,   nil,
    51,    51,    51,   nil,   nil,   nil,    51,    51,    51,    51,
   nil,   nil,    62,    62,   nil,   nil,   nil,   nil,   113,   nil,
   113,   113,   113,   nil,    51,    51,   113,   113,   113,   113,
   118,   nil,   118,   118,   118,   nil,   nil,   nil,   118,   118,
   118,   118,   nil,   nil,   113,   113,   142,   142,   142,   142,
   142,   142,   142,   142,   142,   nil,   118,   118,    58,   nil,
    58,    58,    58,   nil,    58,   nil,    58,    58,    58,    58,
    59,   nil,    59,    59,    59,   nil,   nil,   nil,    59,    59,
    59,    59,   nil,   nil,    58,    58,   nil,   nil,   nil,   nil,
    93,   nil,    93,    93,    93,    93,    59,    59,    93,    93,
    93,    93,   122,   nil,   122,   122,   122,   nil,   nil,   nil,
   122,   122,   122,   122,   nil,   nil,    93,    93,   170,   170,
   170,   170,    99,   nil,    99,    99,    99,   nil,   122,   122,
    99,    99,    99,    99,   nil,   nil,   170,   170,    48,    48,
    48,    48,    48,    48,    48,    48,    48,   nil,    99,    99 ]

racc_action_pointer = [
   257,   269,    -5,   257,   218,   164,   210,   nil,   nil,   nil,
   nil,   nil,   nil,   234,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   203,   193,   187,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   171,   165,   nil,   nil,   nil,
   158,   150,   141,   nil,   nil,   nil,   nil,   nil,   469,    15,
    52,   342,   nil,   228,   nil,   142,   nil,   nil,   402,   414,
   141,    76,   330,   nil,   nil,    92,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    84,   nil,    71,   nil,    69,
    57,    48,   nil,   434,     9,    -3,   nil,   nil,   192,   466,
    47,    28,    33,     1,   nil,   266,   278,   298,   nil,   nil,
   nil,   nil,   310,   362,    88,   nil,   nil,   nil,   374,   nil,
    90,    70,   446,   104,    84,   116,   nil,   nil,   nil,   nil,
   nil,   nil,   107,   112,    99,   nil,    97,   132,   136,   nil,
    18,   nil,   377,   -21,     0,   151,   nil,   202,   nil,   112,
   141,   171,   214,   151,   142,   152,    12,   nil,   nil,   nil,
   nil,   nil,    -9,   nil,   164,    99,   246,   206,   151,   197,
   454,   nil,   nil,   212,   nil,   208,   190,   196,   226,   201,
   nil,   nil,   237,   nil,   249,   nil,   nil,   nil,   nil,   nil,
   nil,    60,   222,   nil,   nil,    38,   260,   229,   nil,   223,
   nil,   nil,     8,   nil,   nil,   252,   235,   nil,   nil ]

racc_action_default = [
  -132,  -132,    -3,  -132,  -132,    -3,  -132,    -5,    -6,    -7,
    -8,    -9,   -10,   -87,   -13,   -14,   -15,   -21,   -27,   -33,
   -34,   -35,   -36,   -41,  -132,  -132,   -59,   -60,   -61,   -62,
   -63,   -83,   -84,   -85,   -86,  -132,  -132,  -102,  -105,  -108,
  -132,  -132,  -132,   209,    -1,    -2,    -4,   -11,   -20,   -26,
   -32,   -87,   -38,   -55,   -43,  -132,   -39,   -40,   -87,   -87,
  -132,  -132,   -87,  -110,  -113,  -132,   -16,   -17,   -70,   -71,
   -72,   -73,   -74,   -75,   -76,   -77,   -78,   -22,   -23,   -79,
   -80,   -28,   -29,   -81,   -82,  -132,   -42,   -58,   -47,  -132,
  -132,  -132,   -56,   -66,  -132,   -92,   -93,   -94,  -132,   -87,
    -3,  -132,  -132,  -123,   -12,   -87,   -87,   -87,   -37,   -46,
   -49,   -51,   -87,   -87,  -132,   -64,   -88,   -89,   -87,   -95,
  -132,  -132,   -87,  -126,  -132,  -132,   -18,   -24,   -30,   -53,
   -57,   -45,   -69,   -92,  -132,  -103,  -132,  -132,  -132,  -124,
  -116,  -122,   -20,   -26,   -32,  -132,   -65,   -87,   -91,    -3,
  -132,  -132,   -87,  -132,  -131,  -132,  -116,  -117,  -118,   -19,
   -25,   -31,   -55,   -67,  -132,    -3,   -87,  -132,    -3,  -129,
  -132,  -114,  -115,  -121,   -54,   -69,   -99,  -132,  -132,  -132,
  -111,  -125,  -132,  -130,  -132,  -120,   -68,   -96,   -97,  -104,
  -106,    -3,  -132,  -127,  -119,  -132,  -132,  -132,  -112,  -131,
   -98,  -100,    -3,  -107,  -109,  -129,  -132,  -128,  -101 ]

racc_goto_table = [
     4,    47,    87,    45,    95,    66,   169,   146,    81,    77,
   101,   117,   181,   157,   155,    60,   128,   106,    88,    50,
   107,   144,   183,    51,    52,    86,    54,    53,   114,   157,
   172,    55,    49,   127,    89,    90,   145,   113,   142,    85,
   132,   175,    94,   105,    48,   187,    97,    98,   207,   148,
   186,   205,   109,   126,   134,   200,   195,   143,   150,    61,
   196,   138,   102,   192,   133,   124,    65,   103,   184,   173,
   201,     1,   154,   199,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   nil,   nil,   120,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,   159,
   129,   130,   161,   160,   nil,   nil,    97,   nil,   nil,   nil,
   137,   174,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,   nil,   nil,
   167,   nil,   nil,   nil,   nil,   nil,   nil,   164,   nil,   nil,
   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   177,   nil,   nil,   180,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   206 ]

racc_goto_check = [
     2,     4,    42,     2,    57,    15,    77,    50,    27,    21,
    14,    58,    78,    12,    72,    64,    26,    24,    43,    28,
    30,    31,    33,    35,    36,    37,    38,    39,    40,    12,
    72,    41,    22,    20,    44,    45,    47,    48,    19,     4,
    51,    52,    55,    18,    16,    60,     4,     4,    78,    58,
    50,    77,    43,    14,    61,    62,    63,    25,    65,    66,
    67,    68,    69,    70,    57,    71,    11,    73,    75,    76,
     8,     1,    79,    80,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,    15,
     4,     4,    27,    21,   nil,   nil,     4,   nil,   nil,   nil,
     4,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2 ]

racc_goto_pointer = [
   nil,    71,    -2,   nil,   -12,   nil,   nil,   nil,  -125,   nil,
   nil,    19,  -127,   nil,   -52,   -43,    28,   nil,   -24,   -88,
   -73,   -40,    15,   nil,   -61,   -70,   -91,   -42,     1,   nil,
   -62,  -107,   nil,  -148,   nil,     1,     1,   -28,     3,     4,
   -65,     8,   -51,   -35,   -19,   -18,   nil,   -93,   -55,   nil,
  -125,   -75,  -122,   nil,   nil,   -16,   nil,   -54,   -84,   nil,
  -131,   -65,  -140,  -132,   -22,   -77,    21,  -130,   -62,    -1,
  -117,   -38,  -126,     3,   nil,  -105,   -89,  -148,  -157,   -67,
  -120 ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    10,    11,
    12,   nil,    14,    15,    16,   nil,   nil,    67,   nil,   nil,
    17,   nil,   nil,    78,   nil,   nil,    18,   nil,   nil,    82,
   nil,   nil,    19,    20,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    91,   nil,   nil,    26,
   nil,   nil,   nil,    31,    32,   nil,    35,   nil,   nil,    96,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   156,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 47, :_reduce_1,
  2, 48, :_reduce_none,
  0, 48, :_reduce_none,
  2, 49, :_reduce_4,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_10,
  0, 57, :_reduce_11,
  4, 49, :_reduce_12,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  0, 62, :_reduce_15,
  3, 50, :_reduce_none,
  0, 64, :_reduce_17,
  0, 65, :_reduce_18,
  5, 61, :_reduce_none,
  0, 61, :_reduce_none,
  0, 68, :_reduce_21,
  3, 60, :_reduce_none,
  0, 70, :_reduce_23,
  0, 71, :_reduce_24,
  5, 67, :_reduce_none,
  0, 67, :_reduce_none,
  0, 74, :_reduce_27,
  3, 66, :_reduce_none,
  0, 76, :_reduce_29,
  0, 77, :_reduce_30,
  5, 73, :_reduce_none,
  0, 73, :_reduce_none,
  1, 72, :_reduce_none,
  1, 72, :_reduce_34,
  1, 72, :_reduce_none,
  0, 81, :_reduce_36,
  4, 72, :_reduce_37,
  2, 78, :_reduce_none,
  2, 78, :_reduce_39,
  2, 78, :_reduce_40,
  0, 85, :_reduce_41,
  2, 82, :_reduce_none,
  1, 82, :_reduce_none,
  0, 87, :_reduce_44,
  4, 84, :_reduce_45,
  2, 83, :_reduce_none,
  1, 83, :_reduce_none,
  0, 90, :_reduce_48,
  2, 83, :_reduce_none,
  0, 91, :_reduce_50,
  2, 83, :_reduce_none,
  0, 92, :_reduce_52,
  0, 93, :_reduce_53,
  6, 88, :_reduce_none,
  0, 88, :_reduce_none,
  0, 94, :_reduce_56,
  3, 89, :_reduce_57,
  0, 89, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_60,
  1, 79, :_reduce_61,
  1, 79, :_reduce_62,
  1, 79, :_reduce_63,
  0, 97, :_reduce_64,
  3, 86, :_reduce_none,
  0, 86, :_reduce_none,
  0, 98, :_reduce_67,
  4, 96, :_reduce_none,
  0, 96, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_77,
  1, 63, :_reduce_78,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 99, :_reduce_85,
  1, 100, :_reduce_86,
  0, 102, :_reduce_87,
  4, 80, :_reduce_88,
  2, 101, :_reduce_none,
  0, 101, :_reduce_none,
  3, 104, :_reduce_none,
  0, 104, :_reduce_none,
  1, 103, :_reduce_93,
  1, 105, :_reduce_none,
  0, 107, :_reduce_95,
  9, 54, :_reduce_96,
  0, 109, :_reduce_97,
  3, 106, :_reduce_none,
  0, 106, :_reduce_none,
  1, 108, :_reduce_none,
  3, 108, :_reduce_none,
  0, 110, :_reduce_102,
  0, 111, :_reduce_103,
  9, 51, :_reduce_104,
  0, 112, :_reduce_105,
  0, 113, :_reduce_106,
  11, 52, :_reduce_none,
  1, 53, :_reduce_108,
  11, 55, :_reduce_none,
  0, 115, :_reduce_110,
  0, 116, :_reduce_111,
  10, 58, :_reduce_none,
  0, 119, :_reduce_113,
  7, 59, :_reduce_none,
  2, 118, :_reduce_none,
  0, 118, :_reduce_none,
  1, 120, :_reduce_117,
  0, 122, :_reduce_118,
  4, 120, :_reduce_none,
  1, 121, :_reduce_none,
  0, 121, :_reduce_none,
  2, 117, :_reduce_none,
  0, 117, :_reduce_none,
  0, 125, :_reduce_124,
  4, 114, :_reduce_none,
  0, 114, :_reduce_none,
  0, 126, :_reduce_127,
  5, 124, :_reduce_none,
  0, 124, :_reduce_none,
  2, 123, :_reduce_130,
  0, 123, :_reduce_none ]

racc_reduce_n = 132

racc_shift_n = 209

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  :OP_INCREMENT => 9,
  :OP_DECREMENT => 10,
  "[" => 11,
  "]" => 12,
  :OP_ASIGN => 13,
  :STRING => 14,
  :WORD_TRUE => 15,
  :WORD_FALSE => 16,
  :WORD_NULL => 17,
  "," => 18,
  :OP_EQUAL => 19,
  :OP_NOT_EQUAL => 20,
  :OP_GREATER => 21,
  :OP_GREATER_EQUAL => 22,
  :OP_LESS => 23,
  :OP_LESS_EQUAL => 24,
  :WORD_AND => 25,
  :WORD_OR => 26,
  :WORD_XOR => 27,
  :OP_PLUS => 28,
  :OP_MINUS => 29,
  :OP_MULTIPLY => 30,
  :OP_DIVIDE => 31,
  :INT => 32,
  :FLOAT => 33,
  :WORD_IF => 34,
  "{" => 35,
  "}" => 36,
  :WORD_ELSE => 37,
  :WORD_WHILE => 38,
  :WORD_DO => 39,
  :BLOCK_VERBOSE => 40,
  :WORD_FOR => 41,
  :WORD_FUN => 42,
  :WORD_CLASS => 43,
  :WORD_EXTENDS => 44,
  "=" => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "OP_INCREMENT",
  "OP_DECREMENT",
  "\"[\"",
  "\"]\"",
  "OP_ASIGN",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "WORD_XOR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "BLOCK_VERBOSE",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "\"=\"",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "arreglo",
  "@11",
  "tipo_llamada",
  "vars",
  "funcs",
  "@12",
  "argumentos",
  "@13",
  "arr_acc",
  "asign",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "numero",
  "args_aux",
  "@19",
  "@20",
  "int",
  "float",
  "arr_elems",
  "@21",
  "arr_elem",
  "arr_elems_aux",
  "arr_elem_wrapper",
  "else",
  "@22",
  "aux_else",
  "@23",
  "@24",
  "@25",
  "@26",
  "@27",
  "params",
  "@28",
  "@29",
  "class_extras",
  "class_body",
  "@30",
  "class_body_aux",
  "class_def_var_aux",
  "@31",
  "def_param",
  "params_aux",
  "@32",
  "@33" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_4(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_10(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_11(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_34(val, _values, result)
    fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_36(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_37(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_39(val, _values, result)
     pre_affect "+" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_40(val, _values, result)
     pre_affect "-" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_41(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_44(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_45(val, _values, result)
     fun_call 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_48(val, _values, result)
     post_affect "+" 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_50(val, _values, result)
     post_affect "-" 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_52(val, _values, result)
     load_arr 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_53(val, _values, result)
     access_array_index 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_56(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_57(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_60(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_61(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_62(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_63(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_64(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_67(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_77(val, _values, result)
    p "a ver si pasa por aqui \n"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_78(val, _values, result)
    p "paso por aqui \n"
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_85(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_86(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_87(val, _values, result)
     openArreglo 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_88(val, _values, result)
     closeArreglo 
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_93(val, _values, result)
     copy_value 
    result
  end
.,.,

# reduce 94 omitted

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_95(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_96(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_97(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_102(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_103(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_104(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_105(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_106(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_108(val, _values, result)
     verbose @curr_token[1] 
    result
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_110(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_111(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_113(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_117(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_118(val, _values, result)
     llame_var @curr_token[1] 
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_124(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 125 omitted

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_127(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_130(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 131 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
