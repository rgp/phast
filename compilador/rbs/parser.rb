#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Instrucciones'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 145)

    def initialize(scanner)
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en anÃ¡lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []



        #Eliminar ?
        @latest_var = nil #Ultima variable utilizada
        @output = {}

    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @latest_var = @scope_actual.variables[cual]
        else
            @latest_var = guarda_var cual
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        @scopes[:constantes].variables[nombre]
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        elsif(cual == "println")
            genera(Phast::PRTLN,nil,nil,nil)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 #TODO
        @mem_offset = 0 #TODO

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = 0 #scope_constantes.variables.length
        #Correr variables
        # scope_global.variables.each do |k,v|
        #     v.direccion_virtual += @mem_offset
        # end
        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        puts @salida

    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado", val.inspect, token_to_str(t) || '?')
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    21,     2,    22,   112,    33,   113,    24,    26,    27,
    28,   147,    85,    86,    81,    82,   147,    81,    82,    77,
    78,    77,    78,   115,    31,    32,    34,   189,   107,    34,
    31,   102,    98,    35,    36,    37,    38,    39,    40,    13,
    21,   120,    22,   121,    33,    39,    24,    26,    27,    28,
    39,    33,   123,    24,    26,    27,    28,    91,   126,   127,
    94,   130,   131,    31,    32,   132,   137,   138,    34,   140,
    31,    32,    35,    36,    37,    38,    39,    40,    13,    21,
   141,    22,   142,    33,    93,    24,    26,    27,    28,    67,
    68,    69,    70,    71,    72,    73,    74,   109,    91,    89,
    88,    87,    31,    32,   153,   154,    63,    34,   156,   158,
   159,    35,    36,    37,    38,    39,    40,    13,    21,    62,
    22,   163,    33,    61,    24,    26,    27,    28,    67,    68,
    69,    70,    71,    72,    73,    74,    58,   166,   -41,   169,
    44,    31,    32,   172,   137,   175,    34,   176,   177,   178,
    35,    36,    37,    38,    39,    40,    13,    21,   180,    22,
   181,    33,    42,    24,    26,    27,    28,   185,    41,   190,
   191,   158,     3,   169,   195,   nil,   nil,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,    34,   nil,   nil,   nil,    35,
    36,    37,    38,    39,    40,    13,    21,   nil,    22,   nil,
    33,   nil,    24,    26,    27,    28,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,
    32,   nil,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,
    37,    38,    39,    40,    13,    21,   nil,    22,   nil,    33,
   nil,    24,    26,    27,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,    32,
   nil,   nil,   nil,    34,   nil,   nil,   nil,    35,    36,    37,
    38,    39,    40,    13,    21,   nil,    22,   nil,    33,   nil,
    24,    26,    27,    28,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,    32,   nil,
   nil,   nil,    34,   nil,   nil,   nil,    35,    36,    37,    38,
    39,    40,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,   nil,   nil,   nil,    31,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    31,    32,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    32,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,   nil,   nil,   nil,    31,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    31,    32,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    32,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,   nil,   nil,   nil,    31,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    31,    32,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    32,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,    21,   nil,    22,   nil,    33,   nil,    24,    26,
    27,    28,   nil,   nil,   nil,    31,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    31,    32,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,    21,   nil,    22,
   nil,    33,   nil,    24,    26,    27,    28,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    32 ]

racc_action_check = [
   189,   189,     0,   189,    95,   189,    96,   189,   189,   189,
   189,   145,    51,    51,   135,   135,   131,    48,    48,    47,
    47,   134,   134,    97,   189,   189,   182,   182,    88,   189,
    86,    83,    64,   189,   189,   189,   189,   189,   189,    94,
    94,   104,    94,   105,    94,   145,    94,    94,    94,    94,
   131,   158,   107,   158,   158,   158,   158,   108,   110,   111,
    60,   113,   114,    94,    94,   115,   122,   125,    94,   127,
   158,   158,    94,    94,    94,    94,    94,    94,     2,     2,
   128,     2,   129,     2,    59,     2,     2,     2,     2,    46,
    46,    46,    46,    46,    46,    46,    46,    92,    56,    55,
    54,    53,     2,     2,   139,   140,    40,     2,   142,   143,
   144,     2,     2,     2,     2,     2,     2,   153,   153,    39,
   153,   152,   153,    38,   153,   153,   153,   153,   133,   133,
   133,   133,   133,   133,   133,   133,    34,   155,    22,   157,
     6,   153,   153,   161,   162,   163,   153,   164,   165,   166,
   153,   153,   153,   153,   153,   153,   178,   178,   169,   178,
   171,   178,     4,   178,   178,   178,   178,   179,     3,   183,
   184,   186,     1,   192,   193,   nil,   nil,   nil,   nil,   nil,
   178,   178,   nil,   nil,   nil,   178,   nil,   nil,   nil,   178,
   178,   178,   178,   178,   178,   156,   156,   nil,   156,   nil,
   156,   nil,   156,   156,   156,   156,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   156,
   156,   nil,   nil,   nil,   156,   nil,   nil,   nil,   156,   156,
   156,   156,   156,   156,   138,   138,   nil,   138,   nil,   138,
   nil,   138,   138,   138,   138,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   138,   138,
   nil,   nil,   nil,   138,   nil,   nil,   nil,   138,   138,   138,
   138,   138,   138,     5,     5,   nil,     5,   nil,     5,   nil,
     5,     5,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,   nil,
   nil,   nil,     5,   nil,   nil,   nil,     5,     5,     5,     5,
     5,     5,    49,   nil,    49,   nil,    49,   nil,    49,    49,
    49,    49,    33,   nil,    33,   nil,    33,   nil,    33,    33,
    33,    33,   nil,   nil,   nil,    49,    49,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    33,    13,   nil,    13,
   nil,    13,   nil,    13,    13,    13,    13,   141,   nil,   141,
   nil,   141,   nil,   141,   141,   141,   141,   nil,   nil,   nil,
    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   141,   141,    58,   nil,    58,   nil,    58,   nil,    58,    58,
    58,    58,    91,   nil,    91,   nil,    91,   nil,    91,    91,
    91,    91,   nil,   nil,   nil,    58,    58,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    91,    91,    99,   nil,    99,
   nil,    99,   nil,    99,    99,    99,    99,   154,   nil,   154,
   nil,   154,   nil,   154,   154,   154,   154,   nil,   nil,   nil,
    99,    99,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   154,   154,    87,   nil,    87,   nil,    87,   nil,    87,    87,
    87,    87,   100,   nil,   100,   nil,   100,   nil,   100,   100,
   100,   100,   nil,   nil,   nil,    87,    87,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   100,   100,   137,   nil,   137,
   nil,   137,   nil,   137,   137,   137,   137,   101,   nil,   101,
   nil,   101,   nil,   101,   101,   101,   101,   nil,   nil,   nil,
   137,   137,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   101,   101,   103,   nil,   103,   nil,   103,   nil,   103,   103,
   103,   103,   112,   nil,   112,   nil,   112,   nil,   112,   112,
   112,   112,   nil,   nil,   nil,   103,   103,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   112,   112,    61,   nil,    61,
   nil,    61,   nil,    61,    61,    61,    61,    93,   nil,    93,
   nil,    93,   nil,    93,    93,    93,    93,   nil,   nil,   nil,
    61,    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    93,    93 ]

racc_action_pointer = [
     0,   172,    73,   168,   159,   268,   136,   nil,   nil,   nil,
   nil,   nil,   nil,   341,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   132,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   316,   130,   nil,   nil,   nil,   117,   111,
    98,   nil,   nil,   nil,   nil,   nil,    72,    -6,   -10,   306,
   nil,     3,   nil,    95,    69,    88,    82,   nil,   376,    78,
    25,   551,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,   nil,   nil,     1,   446,    -4,   nil,
   nil,   386,    90,   561,    34,     0,     0,   -21,   nil,   411,
   456,   491,   nil,   516,    30,    36,   nil,    19,    41,   nil,
    51,    23,   526,    53,    27,    57,   nil,   nil,   nil,   nil,
   nil,   nil,    50,   nil,   nil,    32,   nil,    31,    76,    75,
   nil,     8,   nil,   111,    -4,   -13,   nil,   481,   229,    69,
    99,   351,    73,    78,    74,     3,   nil,   nil,   nil,   nil,
   nil,   nil,    85,   112,   421,   130,   190,   123,    41,   nil,
   nil,   134,   128,   108,   111,   141,   114,   nil,   nil,   150,
   nil,   156,   nil,   nil,   nil,   nil,   nil,   nil,   151,   131,
   nil,   nil,    -8,   165,   134,   nil,   140,   nil,   nil,    -5,
   nil,   nil,   157,   138,   nil,   nil ]

racc_action_default = [
  -119,  -119,    -3,  -119,  -119,    -3,  -119,    -5,    -6,    -7,
    -8,    -9,   -10,  -119,   -13,   -14,   -15,   -21,   -27,   -33,
   -34,   -35,   -38,   -47,   -48,   -49,   -50,   -51,   -52,   -71,
   -72,   -73,   -74,   -77,  -119,   -89,   -92,   -95,  -119,  -119,
  -119,   196,    -1,    -2,    -4,   -11,   -20,   -26,   -32,  -119,
   -37,   -46,   -40,  -119,   -71,  -119,   -79,   -81,  -119,  -119,
  -119,  -119,   -97,  -100,  -119,   -16,   -17,   -59,   -60,   -61,
   -62,   -63,   -64,   -65,   -66,   -22,   -23,   -67,   -68,   -28,
   -29,   -69,   -70,  -119,   -39,   -43,  -119,   -55,  -119,   -75,
   -76,  -119,  -119,  -119,    -3,  -119,  -119,  -110,   -12,  -119,
  -119,  -119,   -36,  -119,  -119,  -119,   -53,  -119,   -79,   -82,
  -119,  -119,  -119,  -113,  -119,  -119,   -18,   -24,   -30,   -44,
   -45,   -42,   -58,   -80,   -78,  -119,   -90,  -119,  -119,  -119,
  -111,  -103,  -109,   -20,   -26,   -32,   -54,  -119,    -3,  -119,
  -119,  -119,  -119,  -118,  -119,  -103,  -104,  -105,   -19,   -25,
   -31,   -56,  -119,    -3,  -119,  -119,    -3,  -116,  -119,  -101,
  -102,  -108,   -58,   -86,  -119,  -119,  -119,   -98,  -112,  -119,
  -117,  -119,  -107,   -57,   -83,   -84,   -91,   -93,    -3,  -119,
  -114,  -106,  -119,  -119,  -119,   -99,  -118,   -85,   -87,    -3,
   -94,   -96,  -116,  -119,  -115,   -88 ]

racc_goto_table = [
     4,    45,    65,    43,    54,    56,    79,    75,    90,   157,
   136,    95,   168,   144,   146,    53,   134,   118,    47,    48,
   101,    57,   135,   170,    49,    50,    84,   160,   146,    52,
    51,   105,   100,   117,   103,   133,   122,    83,   162,    55,
    99,    46,   174,   125,   187,   182,    92,   194,    59,   116,
   173,   139,   192,    60,   183,   129,    96,   104,   179,   114,
   124,    64,    54,   108,    97,   171,   161,   188,     1,   143,
   186,   nil,   nil,   nil,   nil,   106,   nil,   nil,   nil,    57,
   nil,   110,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   148,
   nil,   119,   111,   150,   149,   nil,   nil,   nil,   nil,   nil,
   128,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   nil,   nil,   nil,   155,
   nil,   nil,   nil,   nil,   nil,   nil,   152,   nil,   nil,   nil,
   nil,   nil,   165,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   164,   nil,   nil,   167,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   193 ]

racc_goto_check = [
     2,     4,    15,     2,    41,    50,    27,    21,    51,    69,
    45,    14,    70,    64,    12,    40,    25,    26,    22,    28,
    30,     4,    31,    33,    34,    35,    36,    64,    12,    37,
    38,    39,    24,    20,    42,    19,    46,     4,    47,    49,
    18,    16,    52,    53,    54,    55,     4,    70,    56,    14,
    45,    57,    69,    58,    59,    60,    61,    41,    62,    63,
    51,    11,    41,    50,    65,    67,    68,     8,     1,    71,
    72,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     4,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,     4,     2,    27,    21,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    68,    -2,   nil,   -12,   nil,   nil,   nil,  -115,   nil,
   nil,    16,  -117,   nil,   -50,   -44,    25,   nil,   -26,   -81,
   -67,   -40,     1,   nil,   -44,  -101,   -84,   -42,     1,   nil,
   -60,   -96,   nil,  -135,     3,     3,   -25,     7,     8,   -56,
    -7,   -29,   -51,   nil,   nil,  -112,   -70,  -113,   nil,     6,
   -28,   -48,  -121,   -66,  -138,  -130,    13,   -75,    17,  -123,
   -58,    -6,  -109,   -38,  -118,     1,   nil,   -96,   -81,  -134,
  -145,   -61,  -110 ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    10,    11,
    12,   nil,    14,    15,    16,   nil,   nil,    66,   nil,   nil,
    17,   nil,   nil,    76,   nil,   nil,    18,   nil,   nil,    80,
   nil,   nil,    19,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    29,   nil,    23,    25,   nil,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   145,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 46, :_reduce_1,
  2, 47, :_reduce_none,
  0, 47, :_reduce_none,
  2, 48, :_reduce_4,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_10,
  0, 56, :_reduce_11,
  4, 48, :_reduce_12,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  0, 61, :_reduce_15,
  3, 49, :_reduce_none,
  0, 63, :_reduce_17,
  0, 64, :_reduce_18,
  5, 60, :_reduce_none,
  0, 60, :_reduce_none,
  0, 67, :_reduce_21,
  3, 59, :_reduce_none,
  0, 69, :_reduce_23,
  0, 70, :_reduce_24,
  5, 66, :_reduce_none,
  0, 66, :_reduce_none,
  0, 73, :_reduce_27,
  3, 65, :_reduce_none,
  0, 75, :_reduce_29,
  0, 76, :_reduce_30,
  5, 72, :_reduce_none,
  0, 72, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_34,
  0, 79, :_reduce_35,
  4, 71, :_reduce_36,
  2, 77, :_reduce_none,
  0, 83, :_reduce_38,
  2, 80, :_reduce_none,
  1, 80, :_reduce_none,
  0, 85, :_reduce_41,
  4, 82, :_reduce_42,
  0, 87, :_reduce_43,
  3, 81, :_reduce_44,
  3, 81, :_reduce_none,
  0, 81, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_48,
  1, 78, :_reduce_49,
  1, 78, :_reduce_50,
  1, 78, :_reduce_51,
  1, 78, :_reduce_52,
  0, 91, :_reduce_53,
  3, 84, :_reduce_none,
  0, 84, :_reduce_none,
  0, 92, :_reduce_56,
  4, 90, :_reduce_none,
  0, 90, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  1, 86, :_reduce_73,
  1, 93, :_reduce_74,
  3, 89, :_reduce_none,
  2, 94, :_reduce_none,
  0, 94, :_reduce_none,
  3, 96, :_reduce_none,
  0, 96, :_reduce_none,
  4, 95, :_reduce_none,
  1, 95, :_reduce_none,
  0, 98, :_reduce_82,
  9, 53, :_reduce_83,
  0, 100, :_reduce_84,
  3, 97, :_reduce_none,
  0, 97, :_reduce_none,
  1, 99, :_reduce_none,
  3, 99, :_reduce_none,
  0, 101, :_reduce_89,
  0, 102, :_reduce_90,
  9, 50, :_reduce_91,
  0, 103, :_reduce_92,
  0, 104, :_reduce_93,
  11, 51, :_reduce_none,
  1, 52, :_reduce_none,
  11, 54, :_reduce_none,
  0, 106, :_reduce_97,
  0, 107, :_reduce_98,
  10, 57, :_reduce_none,
  0, 110, :_reduce_100,
  7, 58, :_reduce_none,
  2, 109, :_reduce_none,
  0, 109, :_reduce_none,
  1, 111, :_reduce_104,
  0, 113, :_reduce_105,
  4, 111, :_reduce_none,
  1, 112, :_reduce_none,
  0, 112, :_reduce_none,
  2, 108, :_reduce_none,
  0, 108, :_reduce_none,
  0, 116, :_reduce_111,
  4, 105, :_reduce_none,
  0, 105, :_reduce_none,
  0, 117, :_reduce_114,
  5, 115, :_reduce_none,
  0, 115, :_reduce_none,
  2, 114, :_reduce_117,
  0, 114, :_reduce_none ]

racc_reduce_n = 119

racc_shift_n = 196

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  :OP_ASIGN => 9,
  "[" => 10,
  "]" => 11,
  :STRING => 12,
  :WORD_TRUE => 13,
  :WORD_FALSE => 14,
  :WORD_NULL => 15,
  "," => 16,
  :OP_EQUAL => 17,
  :OP_NOT_EQUAL => 18,
  :OP_GREATER => 19,
  :OP_GREATER_EQUAL => 20,
  :OP_LESS => 21,
  :OP_LESS_EQUAL => 22,
  :WORD_AND => 23,
  :WORD_OR => 24,
  :OP_PLUS => 25,
  :OP_MINUS => 26,
  :OP_MULTIPLY => 27,
  :OP_DIVIDE => 28,
  :INT => 29,
  :FLOAT => 30,
  "=" => 31,
  ">" => 32,
  :arr_val => 33,
  :WORD_IF => 34,
  "{" => 35,
  "}" => 36,
  :WORD_ELSE => 37,
  :WORD_WHILE => 38,
  :WORD_DO => 39,
  :VERBOSE_BLOCK => 40,
  :WORD_FOR => 41,
  :WORD_FUN => 42,
  :WORD_CLASS => 43,
  :WORD_EXTENDS => 44 }

racc_nt_base = 45

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "OP_ASIGN",
  "\"[\"",
  "\"]\"",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "\"=\"",
  "\">\"",
  "arr_val",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "VERBOSE_BLOCK",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "@11",
  "tipo_llamada",
  "vars",
  "funcs",
  "@12",
  "argumentos",
  "@13",
  "int",
  "@14",
  "numero",
  "arreglo",
  "args_aux",
  "@15",
  "@16",
  "float",
  "arr_elems",
  "arr_elem",
  "arr_elems_aux",
  "else",
  "@17",
  "aux_else",
  "@18",
  "@19",
  "@20",
  "@21",
  "@22",
  "params",
  "@23",
  "@24",
  "class_extras",
  "class_body",
  "@25",
  "class_body_aux",
  "class_def_var_aux",
  "@26",
  "def_param",
  "params_aux",
  "@27",
  "@28" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_4(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_10(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_11(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_34(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_35(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_36(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_38(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_41(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_42(val, _values, result)
     fun_call 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_43(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_44(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_48(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_49(val, _values, result)
     p "encontre arreglo" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_50(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_51(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_52(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_53(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_56(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_73(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_74(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_82(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_83(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_84(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_89(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_90(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_91(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_92(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_93(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_97(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_98(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_100(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_104(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_105(val, _values, result)
     llame_var @curr_token[1] 
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_111(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_114(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_117(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 118 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
