#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Arr'
require_relative 'lib/Instrucciones'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 150)

    def initialize(scanner)
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en anÃ¡lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []
        
        @pArr = []

    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def load_arr
        arr_id = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp
        genera(Phast::ARRLD,arr_id,nil,tmp)
    end

    def access_array_index
        arr_index = @pOperandos.pop
        arr_tmp = @pOperandos.last
        genera(Phast::ARRVAL,arr_index,arr_tmp,nil) # VAL RNG
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        genera(Phast::ARRIND,arr_tmp,arr_index,tmp)
        @pOperandos.push tmp
    end

    def openArreglo
        tmp = ArrDefinition.new(Var.new(nil,nil,nil,@scope_actual.temporales.length,nil))
        @scope_actual.temporales.push tmp.id
        @pArr.push tmp
    end

    def closeArreglo
        arr = @pArr.pop
        genera(Phast::ARRDEC,arr.length,nil,arr.id)
        arr.initQuads.each do |q|
            @scope_actual.quads.push q
        end
        @pOperandos.push arr.id
    end

    def copy_value
        de = @pOperandos.pop
        @pArr.last.initQuads.push Quad.new(Phast::ARRINI, de, @pArr.last.id, @pArr.last.length)
        @pArr.last.length += 1
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @scope_actual.variables[cual]
        else
            if @pArr.last != nil
                guarda_cte("NULL",nil,0)
            else
                guarda_var cual
            end
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        cte = @scopes[:constantes].variables[nombre]
        return cte
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        elsif(cual == "println")
            genera(Phast::PRTLN,nil,nil,nil)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 #TODO
        @mem_offset = 0 #TODO

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = 0 #scope_constantes.variables.length
        #Correr variables
        # scope_global.variables.each do |k,v|
        #     v.direccion_virtual += @mem_offset
        # end
        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        puts @salida

    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado en la linea #{$lineno}", val.inspect, token_to_str(t) || '?')
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    22,   167,    23,   -35,    74,    75,    25,    26,    27,
    28,   116,    13,    22,   113,    23,   -35,    74,    75,    25,
    26,    27,    28,   149,    31,    32,    33,   -47,   149,    89,
    34,    35,    36,    37,    38,    39,    31,    32,    33,    78,
    79,   110,    34,    35,    36,    37,    38,    39,    13,    22,
   106,    23,   -35,    89,    38,    25,    26,    27,    28,    38,
    13,    22,   104,    23,   -35,    33,   193,    25,    26,    27,
    28,   103,    31,    32,    33,    78,    79,   123,    34,    35,
    36,    37,    38,    39,    31,    32,    33,   126,   127,   101,
    34,    35,    36,    37,    38,    39,    13,    22,   130,    23,
   -35,   131,   132,    25,    26,    27,    28,   103,    13,    22,
   139,    23,   -35,   140,   142,    25,    26,    27,    28,   143,
    31,    32,    33,   144,    97,    93,    34,    35,    36,    37,
    38,    39,    31,    32,    33,    92,    90,   153,    34,    35,
    36,    37,    38,    39,    13,    22,    60,    23,   -35,    59,
   156,    25,    26,    27,    28,   157,    13,    22,    58,    23,
   -35,   159,   161,    25,    26,    27,    28,   162,    31,    32,
    33,    55,   -47,   114,    34,    35,    36,    37,    38,    39,
    31,    32,    33,   -43,    49,   170,    34,    35,    36,    37,
    38,    39,    22,    43,    23,   173,    41,   176,    25,    26,
    27,    28,    22,   139,    23,   179,   180,   181,    25,    26,
    27,    28,    22,   182,    23,    31,    32,   184,    25,    26,
    27,    28,    22,   185,    23,    31,    32,    40,    25,    26,
    27,    28,    22,   189,    23,    31,    32,     2,    25,    26,
    27,    28,    22,   194,    23,    31,    32,   195,    25,    26,
    27,    28,    22,   -61,    23,    31,    32,   161,    25,    26,
    27,    28,     3,   173,   199,    31,    32,    64,    65,    66,
    67,    68,    69,    70,    71,    31,    32,    22,   nil,    23,
   nil,   -83,   nil,    25,    26,    27,    28,    22,   nil,    23,
   nil,   nil,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,    22,   nil,    23,
    31,    32,   nil,    25,    26,    27,    28,   nil,   nil,   nil,
    31,    32,    25,    26,    27,    28,   nil,   nil,   nil,   nil,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,
    32,    64,    65,    66,    67,    68,    69,    70,    71 ]

racc_action_check = [
     2,     2,   155,     2,     2,   134,   134,     2,     2,     2,
     2,    96,   193,   193,    94,   193,   193,    46,    46,   193,
   193,   193,   193,   147,     2,     2,     2,    52,   131,    52,
     2,     2,     2,     2,     2,     2,   193,   193,   193,   135,
   135,    91,   193,   193,   193,   193,   193,   193,    93,    93,
    88,    93,    93,    86,   147,    93,    93,    93,    93,   131,
   182,   182,    84,   182,   182,   186,   186,   182,   182,   182,
   182,    81,    93,    93,    93,    47,    47,   108,    93,    93,
    93,    93,    93,    93,   182,   182,   182,   111,   112,    80,
   182,   182,   182,   182,   182,   182,   156,   156,   114,   156,
   156,   115,   116,   156,   156,   156,   156,   120,   140,   140,
   124,   140,   140,   125,   127,   140,   140,   140,   140,   128,
   156,   156,   156,   129,    61,    57,   156,   156,   156,   156,
   156,   156,   140,   140,   140,    56,    54,   137,   140,   140,
   140,   140,   140,   140,   159,   159,    39,   159,   159,    38,
   141,   159,   159,   159,   159,   142,     5,     5,    37,     5,
     5,   144,   145,     5,     5,     5,     5,   146,   159,   159,
   159,    33,   153,    95,   159,   159,   159,   159,   159,   159,
     5,     5,     5,    23,    21,   158,     5,     5,     5,     5,
     5,     5,    50,     6,    50,   160,     4,   164,    50,    50,
    50,    50,   143,   166,   143,   167,   168,   169,   143,   143,
   143,   143,    13,   170,    13,    50,    50,   173,    13,    13,
    13,    13,   139,   175,   139,   143,   143,     3,   139,   139,
   139,   139,    92,   183,    92,    13,    13,     0,    92,    92,
    92,    92,    99,   187,    99,   139,   139,   188,    99,    99,
    99,    99,    90,    90,    90,    92,    92,   190,    90,    90,
    90,    90,     1,   196,   197,    99,    99,    45,    45,    45,
    45,    45,    45,    45,    45,    90,    90,    49,   nil,    49,
   nil,    49,   nil,    49,    49,    49,    49,   157,   nil,   157,
   nil,   nil,   nil,   157,   157,   157,   157,   100,   nil,   100,
    49,    49,   nil,   100,   100,   100,   100,   103,   nil,   103,
   157,   157,   nil,   103,   103,   103,   103,    55,   nil,    55,
   100,   100,   nil,    55,    55,    55,    55,   106,   nil,   106,
   103,   103,   nil,   106,   106,   106,   106,   113,   nil,   113,
    55,    55,   nil,   113,   113,   113,   113,    58,   nil,    58,
   106,   106,   nil,    58,    58,    58,    58,   107,   nil,   107,
   113,   113,   nil,   107,   107,   107,   107,    98,   nil,    98,
    58,    58,   nil,    98,    98,    98,    98,   nil,   nil,   nil,
   107,   107,   161,   161,   161,   161,   nil,   nil,   nil,   nil,
    98,    98,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,
   161,   133,   133,   133,   133,   133,   133,   133,   133 ]

racc_action_pointer = [
   235,   262,    -5,   227,   193,   151,   189,   nil,   nil,   nil,
   nil,   nil,   nil,   206,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   175,   nil,   177,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   165,   nil,   nil,   nil,   152,   141,   138,
   nil,   nil,   nil,   nil,   nil,   250,    -8,    48,   nil,   271,
   186,   nil,    18,   nil,   130,   311,   129,    93,   341,   nil,
   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    79,    55,   nil,   nil,    55,   nil,    42,   nil,    41,   nil,
   246,    34,   226,    43,    10,   167,   -30,   nil,   361,   236,
   291,   nil,   nil,   301,   nil,   nil,   321,   351,    70,   nil,
   nil,    80,    55,   331,    90,    69,    94,   nil,   nil,   nil,
    91,   nil,   nil,   nil,    94,    81,   nil,    79,   115,   116,
   nil,    20,   nil,   384,   -20,    12,   nil,   127,   nil,   216,
   103,   118,   149,   196,   129,   120,   134,    15,   nil,   nil,
   nil,   nil,   nil,   163,   nil,   -31,    91,   281,   178,   139,
   179,   370,   nil,   nil,   186,   nil,   187,   171,   173,   200,
   181,   nil,   nil,   209,   nil,   219,   nil,   nil,   nil,   nil,
   nil,   nil,    55,   200,   nil,   nil,    34,   239,   214,   nil,
   215,   nil,   nil,     7,   nil,   nil,   247,   231,   nil,   nil ]

racc_action_default = [
  -125,  -125,    -3,  -125,  -125,    -3,  -125,    -5,    -6,    -7,
    -8,    -9,   -10,   -35,   -13,   -14,   -15,   -21,   -27,   -33,
   -34,  -125,   -37,   -40,   -54,   -55,   -56,   -57,   -58,   -77,
   -78,   -79,   -80,  -125,   -95,   -98,  -101,  -125,  -125,  -125,
   200,    -1,    -2,    -4,   -11,   -20,   -26,   -32,   -36,   -35,
   -35,   -39,   -50,   -42,  -125,   -35,  -125,  -125,   -35,  -103,
  -106,  -125,   -16,   -17,   -65,   -66,   -67,   -68,   -69,   -70,
   -71,   -72,   -22,   -23,   -73,   -74,   -28,   -29,   -75,   -76,
  -125,   -85,   -86,   -87,  -125,   -41,   -53,   -46,  -125,   -51,
   -35,  -125,   -35,    -3,  -125,  -125,  -116,   -12,   -35,   -35,
   -35,   -81,   -82,   -35,   -38,   -45,   -35,   -35,  -125,   -59,
   -88,  -125,  -125,   -35,  -119,  -125,  -125,   -18,   -24,   -30,
   -85,   -48,   -52,   -44,   -64,  -125,   -96,  -125,  -125,  -125,
  -117,  -109,  -115,   -20,   -26,   -32,   -84,  -125,   -60,   -35,
    -3,  -125,  -125,   -35,  -125,  -124,  -125,  -109,  -110,  -111,
   -19,   -25,   -31,   -50,   -62,  -125,    -3,   -35,  -125,    -3,
  -122,  -125,  -107,  -108,  -114,   -49,   -64,   -92,  -125,  -125,
  -125,  -104,  -118,  -125,  -123,  -125,  -113,   -63,   -89,   -90,
   -97,   -99,    -3,  -125,  -120,  -112,  -125,  -125,  -125,  -105,
  -124,   -91,   -93,    -3,  -100,  -102,  -122,  -125,  -121,   -94 ]

racc_goto_table = [
     4,    62,    44,    42,    86,    76,    72,    81,   160,   138,
    94,   172,    87,   102,   148,   146,   141,   119,    99,    47,
   100,   135,   174,    48,    50,    51,    85,    53,    52,   108,
   148,   163,    54,    46,   118,   137,   107,   133,    83,    84,
   124,   166,    80,    98,    91,    45,   105,   198,   178,   125,
   117,   177,   136,   196,   191,   186,    56,   134,    57,   187,
   129,   120,    95,   183,   115,    61,    96,   175,   164,   192,
     1,   145,   190,   nil,   nil,   nil,   nil,   nil,   nil,   109,
   nil,   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,
   nil,   112,    83,   152,   151,   121,   122,   nil,   nil,   nil,
   nil,   nil,   128,   nil,   nil,   165,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   155,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   168,   nil,   nil,   171,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   197 ]

racc_goto_check = [
     2,    15,     4,     2,    43,    27,    21,    55,    75,    49,
    14,    76,    44,    56,    12,    70,    63,    26,    24,    28,
    30,    31,    33,    34,    36,    37,    38,    39,    40,    41,
    12,    70,    42,    22,    20,    46,    47,    19,     4,     4,
    50,    51,    54,    18,     4,    16,    44,    76,    58,    59,
    14,    49,    56,    75,    60,    61,    62,    25,    64,    65,
    66,    55,    67,    68,    69,    11,    71,    73,    74,     8,
     1,    77,    78,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,     2,     4,    27,    21,     4,     4,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,    43,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2 ]

racc_goto_pointer = [
   nil,    70,    -2,   nil,   -11,   nil,   nil,   nil,  -117,   nil,
   nil,    21,  -117,   nil,   -48,   -44,    29,   nil,   -20,   -80,
   -65,   -40,    16,   nil,   -55,   -61,   -83,   -42,     1,   nil,
   -57,   -98,   nil,  -139,     2,   nil,     2,     2,   -26,     4,
     5,   -61,     9,   -48,   -40,   nil,   -86,   -53,   nil,  -115,
   -69,  -113,   nil,   nil,    -7,   -42,   -68,   nil,  -119,   -61,
  -132,  -124,    22,  -110,    23,  -122,   -54,     3,  -108,   -32,
  -116,     6,   nil,   -97,   -81,  -137,  -149,   -59,  -112 ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    10,    11,
    12,   nil,    14,    15,    16,   nil,   nil,    63,   nil,   nil,
    17,   nil,   nil,    73,   nil,   nil,    18,   nil,   nil,    77,
   nil,   nil,    19,    20,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    88,   nil,   nil,    24,   nil,
   nil,   nil,    29,    30,   nil,   nil,   nil,    82,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   147,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 44, :_reduce_1,
  2, 45, :_reduce_none,
  0, 45, :_reduce_none,
  2, 46, :_reduce_4,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_10,
  0, 54, :_reduce_11,
  4, 46, :_reduce_12,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  0, 59, :_reduce_15,
  3, 47, :_reduce_none,
  0, 61, :_reduce_17,
  0, 62, :_reduce_18,
  5, 58, :_reduce_none,
  0, 58, :_reduce_none,
  0, 65, :_reduce_21,
  3, 57, :_reduce_none,
  0, 67, :_reduce_23,
  0, 68, :_reduce_24,
  5, 64, :_reduce_none,
  0, 64, :_reduce_none,
  0, 71, :_reduce_27,
  3, 63, :_reduce_none,
  0, 73, :_reduce_29,
  0, 74, :_reduce_30,
  5, 70, :_reduce_none,
  0, 70, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_34,
  0, 78, :_reduce_35,
  2, 69, :_reduce_36,
  0, 79, :_reduce_37,
  4, 69, :_reduce_38,
  2, 75, :_reduce_none,
  0, 83, :_reduce_40,
  2, 80, :_reduce_none,
  1, 80, :_reduce_none,
  0, 85, :_reduce_43,
  4, 82, :_reduce_44,
  2, 81, :_reduce_none,
  1, 81, :_reduce_none,
  0, 88, :_reduce_47,
  0, 89, :_reduce_48,
  6, 86, :_reduce_none,
  0, 86, :_reduce_none,
  0, 90, :_reduce_51,
  3, 87, :_reduce_52,
  0, 87, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_55,
  1, 76, :_reduce_56,
  1, 76, :_reduce_57,
  1, 76, :_reduce_58,
  0, 93, :_reduce_59,
  3, 84, :_reduce_none,
  0, 84, :_reduce_none,
  0, 94, :_reduce_62,
  4, 92, :_reduce_none,
  0, 92, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 72, :_reduce_none,
  1, 72, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  1, 95, :_reduce_79,
  1, 96, :_reduce_80,
  3, 77, :_reduce_none,
  2, 97, :_reduce_none,
  0, 97, :_reduce_none,
  3, 99, :_reduce_none,
  0, 99, :_reduce_none,
  1, 98, :_reduce_86,
  1, 100, :_reduce_none,
  0, 102, :_reduce_88,
  9, 51, :_reduce_89,
  0, 104, :_reduce_90,
  3, 101, :_reduce_none,
  0, 101, :_reduce_none,
  1, 103, :_reduce_none,
  3, 103, :_reduce_none,
  0, 105, :_reduce_95,
  0, 106, :_reduce_96,
  9, 48, :_reduce_97,
  0, 107, :_reduce_98,
  0, 108, :_reduce_99,
  11, 49, :_reduce_none,
  1, 50, :_reduce_none,
  11, 52, :_reduce_none,
  0, 110, :_reduce_103,
  0, 111, :_reduce_104,
  10, 55, :_reduce_none,
  0, 114, :_reduce_106,
  7, 56, :_reduce_none,
  2, 113, :_reduce_none,
  0, 113, :_reduce_none,
  1, 115, :_reduce_110,
  0, 117, :_reduce_111,
  4, 115, :_reduce_none,
  1, 116, :_reduce_none,
  0, 116, :_reduce_none,
  2, 112, :_reduce_none,
  0, 112, :_reduce_none,
  0, 120, :_reduce_117,
  4, 109, :_reduce_none,
  0, 109, :_reduce_none,
  0, 121, :_reduce_120,
  5, 119, :_reduce_none,
  0, 119, :_reduce_none,
  2, 118, :_reduce_123,
  0, 118, :_reduce_none ]

racc_reduce_n = 125

racc_shift_n = 200

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  "[" => 9,
  "]" => 10,
  :OP_ASIGN => 11,
  :STRING => 12,
  :WORD_TRUE => 13,
  :WORD_FALSE => 14,
  :WORD_NULL => 15,
  "," => 16,
  :OP_EQUAL => 17,
  :OP_NOT_EQUAL => 18,
  :OP_GREATER => 19,
  :OP_GREATER_EQUAL => 20,
  :OP_LESS => 21,
  :OP_LESS_EQUAL => 22,
  :WORD_AND => 23,
  :WORD_OR => 24,
  :OP_PLUS => 25,
  :OP_MINUS => 26,
  :OP_MULTIPLY => 27,
  :OP_DIVIDE => 28,
  :INT => 29,
  :FLOAT => 30,
  :WORD_IF => 31,
  "{" => 32,
  "}" => 33,
  :WORD_ELSE => 34,
  :WORD_WHILE => 35,
  :WORD_DO => 36,
  :VERBOSE_BLOCK => 37,
  :WORD_FOR => 38,
  :WORD_FUN => 39,
  :WORD_CLASS => 40,
  :WORD_EXTENDS => 41,
  "=" => 42 }

racc_nt_base = 43

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "\"[\"",
  "\"]\"",
  "OP_ASIGN",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "VERBOSE_BLOCK",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "\"=\"",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "arreglo",
  "@11",
  "@12",
  "tipo_llamada",
  "vars",
  "funcs",
  "@13",
  "argumentos",
  "@14",
  "arr_acc",
  "asign",
  "@15",
  "@16",
  "@17",
  "numero",
  "args_aux",
  "@18",
  "@19",
  "int",
  "float",
  "arr_elems",
  "arr_elem",
  "arr_elems_aux",
  "arr_elem_wrapper",
  "else",
  "@20",
  "aux_else",
  "@21",
  "@22",
  "@23",
  "@24",
  "@25",
  "params",
  "@26",
  "@27",
  "class_extras",
  "class_body",
  "@28",
  "class_body_aux",
  "class_def_var_aux",
  "@29",
  "def_param",
  "params_aux",
  "@30",
  "@31" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_4(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_10(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_11(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_34(val, _values, result)
    fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_35(val, _values, result)
     openArreglo 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_36(val, _values, result)
     closeArreglo 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_37(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_38(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_40(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_43(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_44(val, _values, result)
     fun_call 
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_47(val, _values, result)
     load_arr 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_48(val, _values, result)
     access_array_index 
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_51(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_52(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_55(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_56(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_57(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_58(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_59(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_62(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_79(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_80(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_86(val, _values, result)
     copy_value 
    result
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_88(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_89(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_90(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_95(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_96(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_97(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_98(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_99(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_103(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_104(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_106(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_110(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_111(val, _values, result)
     llame_var @curr_token[1] 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_117(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_120(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_123(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 124 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
