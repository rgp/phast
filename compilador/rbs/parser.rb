#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Arr'
require_relative 'lib/Instrucciones'
require_relative 'lib/Objeto'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 150)

    def initialize(scanner,output = "bin.pho")
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en an치lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []
        
        @pArr = []

        @verboseCount = 0;
        @outfile = output


    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def crea_objeto
        @obejota = Objeto.new(@scope_actual)

    end

    def termina_objeto

    end

    def pre_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        var = llame_var @curr_token[1]

        # Partiendo de que ++a === (a=a+1) =>
        fun4 # Metemos fondo falso
        @pOperandos.push var # Metemos "a"
        @pOper.push Phast.op_to_inst("=")  #fun2 metemos "="
        fun1 var  # Metemos "a"
        @pOper.push Phast.op_to_inst(op)  #fun2 metemos suma o resta
        @pOperandos.push uno  # metemos el 1
        fun3_aux # generamos cu치druplo de suma
        fun3 3 # Generamos cu치druplo de asignaci칩n de resultado en var
        fun5 # Quitamos fondo falso
    end

    def post_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        val_actual = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push val_actual
        mas_uno = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push mas_uno
        var = @pOperandos.pop
        @pOperandos.push val_actual
        genera(Phast::ASIG, var, nil, val_actual)
        genera(Phast.op_to_inst(op), var, uno, mas_uno) # incrementa/decrementa
        genera(Phast::ASIG, mas_uno, nil, var)
    end

    def load_arr
        arr_id = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp
        genera(Phast::ARRLD,arr_id,nil,tmp)
    end

    def access_array_index
        arr_index = @pOperandos.pop
        arr_tmp = @pOperandos.last
        genera(Phast::ARRVAL,arr_index,arr_tmp,nil) # VAL RNG
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        genera(Phast::ARRIND,arr_tmp,arr_index,tmp)
        @pOperandos.push tmp
    end

    def openArreglo
        tmp = ArrDefinition.new(Var.new(nil,nil,nil,@scope_actual.temporales.length,nil))
        @scope_actual.temporales.push tmp.id
        @pArr.push tmp
    end

    def closeArreglo
        arr = @pArr.pop
        genera(Phast::ARRDEC,arr.length,nil,arr.id)
        arr.initQuads.each do |q|
            @scope_actual.quads.push q
        end
        @pOperandos.push arr.id
    end

    def copy_value
        de = @pOperandos.pop
        @pArr.last.initQuads.push Quad.new(Phast::ARRINI, de, @pArr.last.id, @pArr.last.length)
        @pArr.last.length += 1
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @scope_actual.variables[cual]
        else
            if @pArr.last != nil
                guarda_cte("NULL",nil,0)
            else
                guarda_var cual
            end
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        cte = @scopes[:constantes].variables[nombre]
        return cte
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre, is_class = false
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        elsif(cual == "println")
            genera(Phast::PRTLN,nil,nil,nil)
        elsif(cual == "link")
            genera(Phast::LNK,nil,nil,nil)
        elsif(cual == "link_hard")
            genera(Phast::LNKH,nil,nil,nil)
        elsif(cual == "exists")
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::EXST,nil,nil,tmp)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 #TODO
        @mem_offset = 0 #TODO

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = 0 #scope_constantes.variables.length
        #Correr variables
        # scope_global.variables.each do |k,v|
        #     v.direccion_virtual += @mem_offset
        # end

        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        # puts @salida
        # print @salida
        write_file @salida
        puts "Compiled #{$lineno} lines."
    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def write_file(lines)
        fout = File.open(@outfile, 'w')
        # fout.puts lines
        lines.each do |l|
            fout.puts l.to_s + "\0"
        end
        fout.close
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado en la linea #{$lineno}", val.inspect, token_to_str(t) || '?')
    end

    def verbose (v)
        v_exec = guarda_cte "verbose"+String(@verboseCount), String(v), 4
        @verboseCount += 1
        genera(Phast::VERB, nil, nil, v_exec)
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    22,   -52,    23,    24,    25,   -86,    82,    83,    27,
    28,    29,    30,    13,    22,   117,    23,    24,    25,   -86,
   157,   121,    27,    28,    29,    30,    33,    34,    36,    78,
    79,   122,    37,    38,    39,    40,    41,    42,   157,    33,
    34,    36,    78,    79,   124,    37,    38,    39,    40,    41,
    42,    13,    22,    41,    23,    24,    25,   -86,    36,   202,
    27,    28,    29,    30,    13,    22,   115,    23,    24,    25,
   -86,    41,   111,    27,    28,    29,    30,    33,    34,    36,
    82,    83,   110,    37,    38,    39,    40,    41,    42,   109,
    33,    34,    36,    91,   130,   107,    37,    38,    39,    40,
    41,    42,    13,    22,   134,    23,    24,    25,   -86,   135,
   103,    27,    28,    29,    30,    13,    22,   138,    23,    24,
    25,   -86,   139,   140,    27,    28,    29,    30,    33,    34,
    36,   146,   117,   148,    37,    38,    39,    40,    41,    42,
   150,    33,    34,    36,   151,   152,    99,    37,    38,    39,
    40,    41,    42,    13,    22,    98,    23,    24,    25,   -86,
    92,    64,    27,    28,    29,    30,    13,    22,   161,    23,
    24,    25,   -86,    63,    62,    27,    28,    29,    30,    33,
    34,    36,   164,   165,    59,    37,    38,    39,    40,    41,
    42,   167,    33,    34,    36,   169,   170,    58,    37,    38,
    39,    40,    41,    42,    22,   118,    23,    24,    25,   175,
    57,    56,    27,    28,    29,    30,    22,   178,    23,    24,
    25,   -44,   181,    46,    27,    28,    29,    30,   184,    33,
    34,   146,   -48,   -50,   -52,    22,    91,    23,    24,    25,
   187,    33,    34,    27,    28,    29,    30,    22,   188,    23,
    24,    25,   189,   190,   192,    27,    28,    29,    30,   193,
    33,    34,    44,    43,   198,     2,    22,   203,    23,    24,
    25,   204,    33,    34,    27,    28,    29,    30,    22,   169,
    23,    24,    25,     3,   181,   208,    27,    28,    29,    30,
   nil,    33,    34,   nil,   nil,   nil,   nil,    22,   nil,    23,
    24,    25,   nil,    33,    34,    27,    28,    29,    30,    22,
   nil,    23,    24,    25,   -86,   nil,   nil,    27,    28,    29,
    30,   nil,    33,    34,   nil,   nil,   nil,   nil,    22,   nil,
    23,    24,    25,   nil,    33,    34,    27,    28,    29,    30,
    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,    28,
    29,    30,   nil,    33,    34,   nil,   nil,   nil,   nil,    22,
   nil,    23,    24,    25,   nil,    33,    34,    27,    28,    29,
    30,    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,
    28,    29,    30,   nil,    33,    34,    68,    69,    70,    71,
    72,    73,    74,    75,   nil,   nil,    33,    34,    22,   nil,
    23,    24,    25,   nil,   -89,   nil,    27,    28,    29,    30,
    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,    28,
    29,    30,   nil,    33,    34,   nil,   nil,   nil,   nil,    22,
   nil,    23,    24,    25,   nil,    33,    34,    27,    28,    29,
    30,    22,   nil,    23,    24,    25,   nil,   nil,   nil,    27,
    28,    29,    30,   nil,    33,    34,    27,    28,    29,    30,
    22,   nil,    23,    24,    25,   nil,    33,    34,    27,    28,
    29,    30,   nil,    33,    34,    27,    28,    29,    30,   nil,
   nil,   nil,   nil,   nil,   nil,    33,    34,   nil,   nil,   nil,
   nil,   nil,    33,    34,    68,    69,    70,    71,    72,    73,
    74,    75 ]

racc_action_check = [
     2,     2,   161,     2,     2,     2,     2,   143,   143,     2,
     2,     2,     2,   202,   202,    94,   202,   202,   202,   202,
   139,   100,   202,   202,   202,   202,     2,     2,     2,    49,
    49,   101,     2,     2,     2,     2,     2,     2,   155,   202,
   202,   202,   142,   142,   102,   202,   202,   202,   202,   202,
   202,    99,    99,   139,    99,    99,    99,    99,   195,   195,
    99,    99,    99,    99,   190,   190,    93,   190,   190,   190,
   190,   155,    90,   190,   190,   190,   190,    99,    99,    99,
    50,    50,    89,    99,    99,    99,    99,    99,    99,    88,
   190,   190,   190,    86,   113,    84,   190,   190,   190,   190,
   190,   190,   167,   167,   119,   167,   167,   167,   167,   120,
    65,   167,   167,   167,   167,     5,     5,   122,     5,     5,
     5,     5,   123,   124,     5,     5,     5,     5,   167,   167,
   167,   131,   132,   133,   167,   167,   167,   167,   167,   167,
   135,     5,     5,     5,   136,   137,    61,     5,     5,     5,
     5,     5,     5,   164,   164,    60,   164,   164,   164,   164,
    55,    42,   164,   164,   164,   164,   148,   148,   144,   148,
   148,   148,   148,    41,    40,   148,   148,   148,   148,   164,
   164,   164,   149,   150,    36,   164,   164,   164,   164,   164,
   164,   152,   148,   148,   148,   153,   154,    35,   148,   148,
   148,   148,   148,   148,   111,    97,   111,   111,   111,   163,
    25,    24,   111,   111,   111,   111,   165,   166,   165,   165,
   165,    23,   168,     6,   165,   165,   165,   165,   172,   111,
   111,   174,    53,    53,    53,   151,    53,   151,   151,   151,
   175,   165,   165,   151,   151,   151,   151,   104,   176,   104,
   104,   104,   177,   178,   181,   104,   104,   104,   104,   183,
   151,   151,     4,     3,   191,     0,   146,   196,   146,   146,
   146,   197,   104,   104,   146,   146,   146,   146,   105,   199,
   105,   105,   105,     1,   205,   206,   105,   105,   105,   105,
   nil,   146,   146,   nil,   nil,   nil,   nil,   106,   nil,   106,
   106,   106,   nil,   105,   105,   106,   106,   106,   106,    92,
   nil,    92,    92,    92,    92,   nil,   nil,    92,    92,    92,
    92,   nil,   106,   106,   nil,   nil,   nil,   nil,    62,   nil,
    62,    62,    62,   nil,    92,    92,    62,    62,    62,    62,
    51,   nil,    51,    51,    51,   nil,   nil,   nil,    51,    51,
    51,    51,   nil,    62,    62,   nil,   nil,   nil,   nil,   112,
   nil,   112,   112,   112,   nil,    51,    51,   112,   112,   112,
   112,   117,   nil,   117,   117,   117,   nil,   nil,   nil,   117,
   117,   117,   117,   nil,   112,   112,   141,   141,   141,   141,
   141,   141,   141,   141,   nil,   nil,   117,   117,    58,   nil,
    58,    58,    58,   nil,    58,   nil,    58,    58,    58,    58,
    59,   nil,    59,    59,    59,   nil,   nil,   nil,    59,    59,
    59,    59,   nil,    58,    58,   nil,   nil,   nil,   nil,   121,
   nil,   121,   121,   121,   nil,    59,    59,   121,   121,   121,
   121,    13,   nil,    13,    13,    13,   nil,   nil,   nil,    13,
    13,    13,    13,   nil,   121,   121,   169,   169,   169,   169,
    98,   nil,    98,    98,    98,   nil,    13,    13,    98,    98,
    98,    98,   nil,   169,   169,   184,   184,   184,   184,   nil,
   nil,   nil,   nil,   nil,   nil,    98,    98,   nil,   nil,   nil,
   nil,   nil,   184,   184,    48,    48,    48,    48,    48,    48,
    48,    48 ]

racc_action_pointer = [
   263,   283,    -5,   263,   259,   110,   219,   nil,   nil,   nil,
   nil,   nil,   nil,   435,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   215,   203,   202,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   186,   178,   nil,   nil,   nil,
   168,   165,   153,   nil,   nil,   nil,   nil,   nil,   475,     2,
    51,   334,   nil,   223,   nil,   154,   nil,   nil,   392,   404,
   149,   112,   322,   nil,   nil,   106,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    88,   nil,    80,   nil,    80,    72,
    61,   nil,   303,    54,    -3,   nil,   nil,   198,   454,    46,
    17,    25,     1,   nil,   241,   272,   291,   nil,   nil,   nil,
   nil,   198,   353,    87,   nil,   nil,   nil,   365,   nil,    97,
    74,   423,   109,    88,   115,   nil,   nil,   nil,   nil,   nil,
   nil,   113,   114,    99,   nil,   103,   140,   138,   nil,    12,
   nil,   367,    15,   -22,   156,   nil,   260,   nil,   161,   148,
   177,   229,   157,   151,   161,    30,   nil,   nil,   nil,   nil,
   nil,    -9,   nil,   174,   148,   210,   210,    97,   204,   442,
   nil,   nil,   215,   nil,   213,   204,   213,   245,   219,   nil,
   nil,   246,   nil,   255,   461,   nil,   nil,   nil,   nil,   nil,
    59,   229,   nil,   nil,   nil,    25,   263,   236,   nil,   235,
   nil,   nil,     8,   nil,   nil,   266,   250,   nil,   nil ]

racc_action_default = [
  -131,  -131,    -3,  -131,  -131,    -3,  -131,    -5,    -6,    -7,
    -8,    -9,   -10,   -86,   -13,   -14,   -15,   -21,   -27,   -33,
   -34,   -35,   -36,   -41,  -131,  -131,   -59,   -60,   -61,   -62,
   -63,   -82,   -83,   -84,   -85,  -131,  -131,  -101,  -104,  -107,
  -131,  -131,  -131,   209,    -1,    -2,    -4,   -11,   -20,   -26,
   -32,   -86,   -38,   -55,   -43,  -131,   -39,   -40,   -86,   -86,
  -131,  -131,   -86,  -109,  -112,  -131,   -16,   -17,   -70,   -71,
   -72,   -73,   -74,   -75,   -76,   -77,   -22,   -23,   -78,   -79,
   -28,   -29,   -80,   -81,  -131,   -42,   -58,   -47,  -131,  -131,
  -131,   -56,   -66,  -131,   -91,   -92,   -93,  -131,   -86,    -3,
  -131,  -131,  -122,   -12,   -86,   -86,   -86,   -37,   -46,   -49,
   -51,   -86,   -86,  -131,   -64,   -87,   -88,   -86,   -94,  -131,
  -131,   -86,  -125,  -131,  -131,   -18,   -24,   -30,   -53,   -57,
   -45,   -69,   -91,  -131,  -102,  -131,  -131,  -131,  -123,  -115,
  -121,   -20,   -26,   -32,  -131,   -65,   -86,   -90,    -3,  -131,
  -131,   -86,  -131,  -130,  -131,  -115,  -116,  -117,   -19,   -25,
   -31,   -55,   -67,  -131,    -3,   -86,  -131,    -3,  -128,  -131,
  -113,  -114,  -120,   -54,   -69,   -98,  -131,  -131,  -131,  -110,
  -124,  -131,  -129,  -131,  -131,   -68,   -95,   -96,  -103,  -105,
    -3,  -131,  -126,  -118,  -119,  -131,  -131,  -131,  -111,  -130,
   -97,   -99,    -3,  -106,  -108,  -128,  -131,  -127,  -100 ]

racc_goto_table = [
     4,    47,    86,    45,    94,    76,   168,   145,    66,    80,
   116,   100,   180,   156,   154,    60,   182,   142,    87,    50,
   106,   143,   105,    51,    52,    85,    54,    53,   113,   156,
   171,   194,    55,    49,   126,    88,    89,   144,   112,    84,
   141,   131,   174,    93,   104,    48,    96,    97,   147,   207,
   185,   108,   205,   125,   186,   133,   200,   195,   127,   149,
    61,   196,   137,   132,   101,   191,   123,    65,   102,   183,
   172,   201,     1,   153,   199,   nil,   nil,   nil,   nil,   nil,
   114,   nil,   nil,   nil,   nil,   nil,   119,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   120,   159,   128,
   129,   158,   160,   nil,   nil,    96,   nil,   nil,   nil,   136,
   173,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   162,   nil,   nil,   nil,   nil,   166,
   nil,   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,   nil,
   nil,   nil,   nil,   177,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   176,   nil,   nil,   179,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   206 ]

racc_goto_check = [
     2,     4,    42,     2,    57,    21,    77,    50,    15,    27,
    58,    14,    78,    12,    72,    64,    33,    25,    43,    28,
    30,    31,    24,    35,    36,    37,    38,    39,    40,    12,
    72,    33,    41,    22,    20,    44,    45,    47,    48,     4,
    19,    51,    52,    55,    18,    16,     4,     4,    58,    78,
    50,    43,    77,    14,    60,    61,    62,    63,    26,    65,
    66,    67,    68,    57,    69,    70,    71,    11,    73,    75,
    76,     8,     1,    79,    80,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,    21,     4,
     4,    15,    27,   nil,   nil,     4,   nil,   nil,   nil,     4,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2 ]

racc_goto_pointer = [
   nil,    72,    -2,   nil,   -12,   nil,   nil,   nil,  -124,   nil,
   nil,    20,  -126,   nil,   -51,   -40,    29,   nil,   -23,   -85,
   -71,   -44,    16,   nil,   -55,  -109,   -48,   -41,     1,   nil,
   -61,  -106,   nil,  -153,   nil,     1,     1,   -28,     3,     4,
   -64,     9,   -51,   -35,   -18,   -17,   nil,   -91,   -53,   nil,
  -124,   -73,  -120,   nil,   nil,   -15,   nil,   -54,   -84,   nil,
  -121,   -63,  -139,  -130,   -22,   -75,    22,  -128,   -60,     1,
  -114,   -36,  -125,     4,   nil,  -103,   -87,  -147,  -156,   -65,
  -118 ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    10,    11,
    12,   nil,    14,    15,    16,   nil,   nil,    67,   nil,   nil,
    17,   nil,   nil,    77,   nil,   nil,    18,   nil,   nil,    81,
   nil,   nil,    19,    20,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    90,   nil,   nil,    26,
   nil,   nil,   nil,    31,    32,   nil,    35,   nil,   nil,    95,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   155,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 46, :_reduce_1,
  2, 47, :_reduce_none,
  0, 47, :_reduce_none,
  2, 48, :_reduce_4,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_10,
  0, 56, :_reduce_11,
  4, 48, :_reduce_12,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  0, 61, :_reduce_15,
  3, 49, :_reduce_none,
  0, 63, :_reduce_17,
  0, 64, :_reduce_18,
  5, 60, :_reduce_none,
  0, 60, :_reduce_none,
  0, 67, :_reduce_21,
  3, 59, :_reduce_none,
  0, 69, :_reduce_23,
  0, 70, :_reduce_24,
  5, 66, :_reduce_none,
  0, 66, :_reduce_none,
  0, 73, :_reduce_27,
  3, 65, :_reduce_none,
  0, 75, :_reduce_29,
  0, 76, :_reduce_30,
  5, 72, :_reduce_none,
  0, 72, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_34,
  1, 71, :_reduce_none,
  0, 80, :_reduce_36,
  4, 71, :_reduce_37,
  2, 77, :_reduce_none,
  2, 77, :_reduce_39,
  2, 77, :_reduce_40,
  0, 84, :_reduce_41,
  2, 81, :_reduce_none,
  1, 81, :_reduce_none,
  0, 86, :_reduce_44,
  4, 83, :_reduce_45,
  2, 82, :_reduce_none,
  1, 82, :_reduce_none,
  0, 89, :_reduce_48,
  2, 82, :_reduce_none,
  0, 90, :_reduce_50,
  2, 82, :_reduce_none,
  0, 91, :_reduce_52,
  0, 92, :_reduce_53,
  6, 87, :_reduce_none,
  0, 87, :_reduce_none,
  0, 93, :_reduce_56,
  3, 88, :_reduce_57,
  0, 88, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_60,
  1, 78, :_reduce_61,
  1, 78, :_reduce_62,
  1, 78, :_reduce_63,
  0, 96, :_reduce_64,
  3, 85, :_reduce_none,
  0, 85, :_reduce_none,
  0, 97, :_reduce_67,
  4, 95, :_reduce_none,
  0, 95, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 98, :_reduce_84,
  1, 99, :_reduce_85,
  0, 101, :_reduce_86,
  4, 79, :_reduce_87,
  2, 100, :_reduce_none,
  0, 100, :_reduce_none,
  3, 103, :_reduce_none,
  0, 103, :_reduce_none,
  1, 102, :_reduce_92,
  1, 104, :_reduce_none,
  0, 106, :_reduce_94,
  9, 53, :_reduce_95,
  0, 108, :_reduce_96,
  3, 105, :_reduce_none,
  0, 105, :_reduce_none,
  1, 107, :_reduce_none,
  3, 107, :_reduce_none,
  0, 109, :_reduce_101,
  0, 110, :_reduce_102,
  9, 50, :_reduce_103,
  0, 111, :_reduce_104,
  0, 112, :_reduce_105,
  11, 51, :_reduce_none,
  1, 52, :_reduce_107,
  11, 54, :_reduce_none,
  0, 114, :_reduce_109,
  0, 115, :_reduce_110,
  10, 57, :_reduce_none,
  0, 118, :_reduce_112,
  7, 58, :_reduce_none,
  2, 117, :_reduce_none,
  0, 117, :_reduce_none,
  1, 119, :_reduce_116,
  0, 121, :_reduce_117,
  4, 119, :_reduce_none,
  2, 120, :_reduce_none,
  0, 120, :_reduce_none,
  2, 116, :_reduce_none,
  0, 116, :_reduce_none,
  0, 124, :_reduce_123,
  4, 113, :_reduce_none,
  0, 113, :_reduce_none,
  0, 125, :_reduce_126,
  5, 123, :_reduce_none,
  0, 123, :_reduce_none,
  2, 122, :_reduce_129,
  0, 122, :_reduce_none ]

racc_reduce_n = 131

racc_shift_n = 209

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  :OP_INCREMENT => 9,
  :OP_DECREMENT => 10,
  "[" => 11,
  "]" => 12,
  :OP_ASIGN => 13,
  :STRING => 14,
  :WORD_TRUE => 15,
  :WORD_FALSE => 16,
  :WORD_NULL => 17,
  "," => 18,
  :OP_EQUAL => 19,
  :OP_NOT_EQUAL => 20,
  :OP_GREATER => 21,
  :OP_GREATER_EQUAL => 22,
  :OP_LESS => 23,
  :OP_LESS_EQUAL => 24,
  :WORD_AND => 25,
  :WORD_OR => 26,
  :OP_PLUS => 27,
  :OP_MINUS => 28,
  :OP_MULTIPLY => 29,
  :OP_DIVIDE => 30,
  :INT => 31,
  :FLOAT => 32,
  :WORD_IF => 33,
  "{" => 34,
  "}" => 35,
  :WORD_ELSE => 36,
  :WORD_WHILE => 37,
  :WORD_DO => 38,
  :BLOCK_VERBOSE => 39,
  :WORD_FOR => 40,
  :WORD_FUN => 41,
  :WORD_CLASS => 42,
  :WORD_EXTENDS => 43,
  "=" => 44 }

racc_nt_base = 45

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "OP_INCREMENT",
  "OP_DECREMENT",
  "\"[\"",
  "\"]\"",
  "OP_ASIGN",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "BLOCK_VERBOSE",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "\"=\"",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "arreglo",
  "@11",
  "tipo_llamada",
  "vars",
  "funcs",
  "@12",
  "argumentos",
  "@13",
  "arr_acc",
  "asign",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "numero",
  "args_aux",
  "@19",
  "@20",
  "int",
  "float",
  "arr_elems",
  "@21",
  "arr_elem",
  "arr_elems_aux",
  "arr_elem_wrapper",
  "else",
  "@22",
  "aux_else",
  "@23",
  "@24",
  "@25",
  "@26",
  "@27",
  "params",
  "@28",
  "@29",
  "class_extras",
  "class_body",
  "@30",
  "class_body_aux",
  "class_def_var_aux",
  "@31",
  "def_param",
  "params_aux",
  "@32",
  "@33" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_4(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_10(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_11(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_34(val, _values, result)
    fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_36(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_37(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_39(val, _values, result)
     pre_affect "+" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_40(val, _values, result)
     pre_affect "-" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_41(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_44(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_45(val, _values, result)
     fun_call 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_48(val, _values, result)
     post_affect "+" 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_50(val, _values, result)
     post_affect "-" 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_52(val, _values, result)
     load_arr 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_53(val, _values, result)
     access_array_index 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_56(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_57(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_60(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_61(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_62(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_63(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_64(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_67(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_84(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_85(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_86(val, _values, result)
     openArreglo 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_87(val, _values, result)
     closeArreglo 
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_92(val, _values, result)
     copy_value 
    result
  end
.,.,

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_94(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_95(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_96(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_101(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_102(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_103(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_104(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_105(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_107(val, _values, result)
     verbose @curr_token[1] 
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_109(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_110(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 111 omitted

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_112(val, _values, result)
     crea_objeto @curr_token[1] 
    result
  end
.,.,

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_116(val, _values, result)
     termina_objeto 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_117(val, _values, result)
     llame_var @curr_token[1] 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_123(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_126(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_129(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 130 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
