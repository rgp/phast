#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'lib/Quad'
require_relative 'lib/Scope'
require_relative 'lib/Var'
require_relative 'lib/Arr'
require_relative 'lib/Instrucciones'
require_relative 'lib/Objeto'

module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 155)

    def initialize(scanner,output = "bin.pho")
        #Lexico
        @scanner = scanner
        @curr_token = nil #Token en an치lisis
        @prev_token = nil #Token anterior

        #Scopes
        @scopes = {:global => Scope.new(nil), :constantes => Scope.new(nil)} #Hash de objetos Scope
        @scopes[:constantes].variables[:lng_ver] = Var.new(1.0,3,1.0,0,-1)
        @scope_actual = @scopes[:global]
        
        #Pilas
        @pOper = [] #Pila de operadores
        @pOperandos = [] #Pila de operandos (Vars)
        @pSaltos = [] #Pila para saltos (if,else, etc.)
        @pFnCall = [] #Pila de llamadas pendientes (Quads)
        @funToCall = []
        
        @pArr = []

        @object_def = {}
        @inst_defs = []

        @verboseCount = 0;
        @outfile = output


    end

    def parse #Parsea mami parsea
        do_parse
        process_output
    end

    def next_token  #Correr tokens
        @prev_token = @curr_token
        @curr_token = @scanner.next_token
    end

    def crea_instancia
        clase = @curr_token[1]

        @pFnCall.push genera(Phast::CALL,nil,nil,clase)
        tmp = Var.new(nil,[:object,clase],nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp
        genera(Phast::REV,nil,nil,tmp)
    end

    def llame_attr cual
        inst = @scope_actual.variables[@inst]
        if !inst.tipoDato.kind_of?(Array)
            p "Error, #{@inst} no es un objeto"
            exit
        end

        class_def = @object_def[inst.tipoDato[1]]

        if class_def.attributos.include? cual
            class_def.attributos[cual]
        else
            p "Error objeto: #{@inst} no contiene atributo #{cual}"
            exit
        end
        inst = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        genera(Phast::ATTR_ACC,inst,class_def.attributos[cual],tmp)
        @pOperandos.push tmp
    end

    def define_objeto quien
        if( @object_def.include? quien)
            p "Error, clase #{quien} previamente definida"
            exit
        end
        @obejota = Objeto.new(quien,@scope_actual)
        aumenta_scope quien
        v = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @obejota.id = v
        @scope_actual.temporales.push v
        genera(Phast::OBJ,nil,nil,v)
    end

    def define_attr nombre
        guarda_var nombre
        v = Var.new(nombre,nil,nil,@obejota.attributos.length,$lineno)
        @pOperandos.push v
        @obejota.attributos[nombre] = v
    end

    def asign_attr
        @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.last
        if oper.tipoDato.kind_of?(Array)
            oper1.tipoDato = oper.tipoDato
        end
        genera(Phast::ATTR, oper, @obejota.id, oper1)
    end

    def termina_objeto
        @object_def[@obejota.nombre] = @obejota
        genera(Phast::RET,nil,nil,@scope_actual.temporales.first)
        disminuye_scope
    end

    def pre_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        var = llame_var @curr_token[1]

        # Partiendo de que ++a === (a=a+1) =>
        fun4 # Metemos fondo falso
        @pOperandos.push var # Metemos "a"
        @pOper.push Phast.op_to_inst("=")  #fun2 metemos "="
        fun1 var  # Metemos "a"
        @pOper.push Phast.op_to_inst(op)  #fun2 metemos suma o resta
        @pOperandos.push uno  # metemos el 1
        fun3_aux # generamos cu치druplo de suma
        fun3 3 # Generamos cu치druplo de asignaci칩n de resultado en var
        fun5 # Quitamos fondo falso
    end

    def post_affect (op)
        uno = guarda_cte("1",1,2) # Guardamos la constante 1
        val_actual = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push val_actual
        mas_uno = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push mas_uno
        var = @pOperandos.pop
        @pOperandos.push val_actual
        genera(Phast::ASIG, var, nil, val_actual)
        genera(Phast.op_to_inst(op), var, uno, mas_uno) # incrementa/decrementa
        genera(Phast::ASIG, mas_uno, nil, var)
    end

    def load_arr
        arr_id = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp
        genera(Phast::ARRLD,arr_id,nil,tmp)
    end

    def access_array_index
        arr_index = @pOperandos.pop
        arr_tmp = @pOperandos.pop
        genera(Phast::ARRVAL,arr_index,arr_tmp,nil) # VAL RNG
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        genera(Phast::ARRIND,arr_tmp,arr_index,tmp)
        @pOperandos.push tmp
    end

    def openArreglo
        tmp = ArrDefinition.new(Var.new(nil,nil,nil,@scope_actual.temporales.length,nil))
        @scope_actual.temporales.push tmp.id
        @pArr.push tmp
    end

    def closeArreglo
        arr = @pArr.pop
        genera(Phast::ARRDEC,arr.length,nil,arr.id)
        arr.initQuads.each do |q|
            @scope_actual.quads.push q
        end
        @pOperandos.push arr.id
    end

    def copy_value
        de = @pOperandos.pop
        @pArr.last.initQuads.push Quad.new(Phast::ARRINI, de, @pArr.last.id, @pArr.last.length)
        @pArr.last.length += 1
    end

    def llame_var cual
        if @scope_actual.variables.include? cual
            @scope_actual.variables[cual]
        else
            if @pArr.last != nil
                guarda_cte("NULL",nil,0)
            else
                guarda_var cual
            end
        end
    end

    def guarda_var nombre
        @scope_actual.variables[nombre] = Var.new(nombre,nil,nil,@scope_actual.variables.length,$lineno)
    end

    def guarda_cte(nombre,valor,tipo)
        if !@scopes[:constantes].variables.include? nombre
            @scopes[:constantes].variables[nombre] = Var.new(valor,tipo,valor,@scopes[:constantes].variables.length,$lineno)
        else
            return @scopes[:constantes].variables[nombre]
        end
    end

    def llama_cte nombre
        cte = @scopes[:constantes].variables[nombre]
        return cte
    end

    def vaciar_pOperandos
        while !@pOperandos.empty?
            @pOperandos.pop
        end
    end

    def aumenta_scope nombre, is_class = false
        if( @scopes.include? nombre )
            p "Error #{nombre} previamente definido"
            exit
        end
        nuevo_scope = Scope.new(@scope_actual)
        @scope_actual = nuevo_scope
        @scopes[nombre] = @scope_actual
    end

    def disminuye_scope
        @scope_actual = @scope_actual.papa
    end
    
    def rellena(quad)
        quad.registro = @scope_actual.quads.length
    end

    def genera(w,x,y,z)
        tmp = Quad.new(w,x,y,z)
        @scope_actual.quads.push tmp
        tmp
    end

    def fun_prepare cual
        @funToCall.push cual
        @pOper.push "("
    end
        

    def fun_call
        if @funToCall.last == nil
            p "Compile Error"
            exit
        end
        cual = @funToCall.pop
        if(cual == "print")
            genera(Phast::PRT,nil,nil,nil)
        elsif(cual == "println")
            genera(Phast::PRTLN,nil,nil,nil)
        elsif(cual == "link")
            genera(Phast::LNK,nil,nil,nil)
        elsif(cual == "link_hard")
            genera(Phast::LNKH,nil,nil,nil)
        elsif(cual == "exists")
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::EXST,nil,nil,tmp)
        else
            @pFnCall.push genera(Phast::CALL,nil,nil,cual)
            tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
            @scope_actual.temporales.push tmp
            @pOperandos.push tmp
            genera(Phast::REV,nil,nil,tmp)
        end
        @pOper.pop
    end

    def argument
        genera(Phast::ARG,nil,nil,@pOperandos.pop)
    end

    def return_quad
        genera(Phast::RET,nil,nil,@pOperandos.last)
    end

    def end_fun
        return_quad
    end
    
    def param variable
        genera(Phast::PAR,nil,nil,variable)
    end
    
    def fun1 cual
        @pOperandos.push cual
    end

    def fun2
        @pOper.push Phast.op_to_inst(@curr_token[1])
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@pOper.empty?
            op = @pOper.last
            case
            when nivel == -1
                if(op == Phast::NOT)
                    fun3_aux2
                end
            when nivel == 0
                if(op == Phast::MUL || op == Phast::DIV)
                    fun3_aux
                end
            when nivel == 1
                if(op == Phast::SUM || op == Phast::REST)
                    fun3_aux
                end
            when nivel == 2
                if(op == Phast::AND || op == Phast::OR || op == Phast::XOR || op == Phast::GT || op == Phast::LT || op == Phast::ELT || op == Phast::EGT || op == Phast::EQ)
                    fun3_aux
                end
            when nivel == 3
                if(op == Phast::ASIG)
                    @pOper.pop
                    oper = @pOperandos.pop
                    oper1 = @pOperandos.last
                    if oper.tipoDato.kind_of?(Array)
                        oper1.tipoDato = oper.tipoDato
                    end
                    genera(op, oper, nil, oper1)
                end
            end
        end
    end

    def fun3_aux
        op = @pOper.pop
        oper = @pOperandos.pop
        oper1 = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper1, oper, @pOperandos.last)
    end

    def fun3_aux2
        op = @pOper.pop
        oper = @pOperandos.pop
        tmp = Var.new(nil,nil,nil,@scope_actual.temporales.length,nil)
        @scope_actual.temporales.push tmp
        @pOperandos.push tmp

        genera(op, oper, nil, @pOperandos.last)
    end

    def fun4
        @pOper.push "("
    end
    def fun5
        @pOper.pop
    end

    def if_quad(step)
        case
        when step == 1
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step ==  2
            rellena(@pSaltos.pop)
        when step == 3
            f = @pSaltos.pop
            @pSaltos.push genera(Phast::GOTO, nil, nil, nil)
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length #Valor deshechable
        when step ==  2
            condicion = @pOperandos.pop
            @pSaltos.push genera(Phast::GOTOF, condicion, nil, nil)
        when step == 3
            f = @pSaltos.pop
            genera(Phast::GOTO, nil, nil, @pSaltos.pop)
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @pSaltos.push @scope_actual.quads.length
        when step ==  2
            condicion = @pOperandos.pop
            genera(Phast::GOTOV, condicion, nil, @pSaltos.pop)
        end
    end

    def process_output

        @reg_counter = 0 
        @mem_offset = 0

        @salida = [0]

        @salida.push @scopes[:constantes].variables.length
        @salida.push @scopes[:global].variables.length
        @salida.push @scopes[:global].temporales.length

        @scopes[:constantes].variables.each do |k,c|
            @salida.push "#{c.direccion_virtual}\t#{c.tipoDato}\t#{c.valor}"
        end

        scope_global = @scopes.delete(:global)
        scope_constantes = @scopes.delete(:constantes)
        
        @scopes.each do |key, s|
            s.registro = @reg_counter
            @mem_offset = s.variables.length
            s.temporales.each do |v|
                v.direccion_virtual += @mem_offset
            end
            print_quads s.quads
        end

        @mem_offset = 0
        @mem_offset += scope_global.variables.length
        scope_global.temporales.each do |v|
            v.direccion_virtual += @mem_offset
        end
        
        @salida[0] = @reg_counter
        print_quads scope_global.quads

        @pFnCall.each do |q|
            if( @scopes[q.registro] == nil)
                p "Funcion #{q.registro} indefinida"
                exit
            end
            q.op1 = @scopes[q.registro].variables.length
            q.op2 = @scopes[q.registro].temporales.length
            q.registro = @scopes[q.registro].registro
        end

        # puts @salida
        # print @salida
        write_file @salida
        puts "Compiled #{$lineno} lines."
    end

    def print_quads(quads)
        reg_offset = @reg_counter
        until quads.empty?
            quad = quads.shift
            quad.saltos reg_offset
            @salida.push quad
            @reg_counter += 1
        end
    end

    def write_file(lines)
        fout = File.open(@outfile, 'w')
        # fout.puts lines
        lines.each do |l|
            fout.puts l.to_s + "\0"
        end
        fout.close
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado en la linea #{$lineno}", val.inspect, token_to_str(t) || '?')
    end

    def verbose (v)
        v_exec = guarda_cte "verbose"+String(@verboseCount), String(v), 4
        @verboseCount += 1
        genera(Phast::VERB, nil, nil, v_exec)
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    17,    26,   186,    27,    28,    29,    30,    87,    88,   -95,
   123,   157,    32,    33,    34,    35,    32,    33,    34,    35,
   157,    76,    77,    78,    79,    80,    81,    82,    83,    84,
    36,    39,    40,    42,   127,    39,    40,    43,    44,    45,
    46,    47,    17,    26,   128,    27,    28,    29,    30,    47,
   130,   -95,    87,    88,    32,    33,    34,    35,    47,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    91,    92,
    42,   222,    36,    39,    40,    42,    91,    92,   131,    43,
    44,    45,    46,    47,    17,    26,   122,    27,    28,    29,
    30,   121,   134,   -95,   135,   136,    32,    33,    34,    35,
    32,    33,    34,    35,   -52,   -54,   137,   120,   -56,   -59,
   118,   114,   142,   113,    36,    39,    40,    42,   144,    39,
    40,    43,    44,    45,    46,    47,    17,    26,   146,    27,
    28,    29,    30,   109,   149,   -95,   150,   108,    32,    33,
    34,    35,   153,   101,    71,   165,   130,   167,   169,   170,
   171,   173,    70,    67,    66,    65,    36,    39,    40,    42,
   -59,   180,    64,    43,    44,    45,    46,    47,    17,    26,
    63,    27,    28,    29,    30,   183,   184,   -95,   -49,   124,
    32,    33,    34,    35,   188,   190,   120,   -59,   194,    52,
    50,   197,    49,   200,     6,   202,   165,   206,    36,    39,
    40,    42,   207,   208,   209,    43,    44,    45,    46,    47,
    17,    26,   211,    27,    28,    29,    30,     2,     7,   -95,
   218,     6,    32,    33,    34,    35,   223,   224,   188,     3,
   200,   228,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    36,    39,    40,    42,   nil,   nil,   nil,    43,    44,    45,
    46,    47,    17,    26,   nil,    27,    28,    29,    30,   nil,
   nil,   -95,   nil,   nil,    32,    33,    34,    35,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    36,    39,    40,    42,   nil,   nil,   nil,    43,
    44,    45,    46,    47,    17,    26,   nil,    27,    28,    29,
    30,   nil,   nil,   -95,   nil,   nil,    32,    33,    34,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    36,    39,    40,    42,   nil,   nil,
   nil,    43,    44,    45,    46,    47,    26,   nil,    27,    28,
    29,    30,   nil,   nil,   nil,   nil,   nil,    32,    33,    34,
    35,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,    27,
    28,    29,    30,   nil,   nil,    36,    39,    40,    32,    33,
    34,    35,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,
    27,    28,    29,    30,   nil,   nil,    36,    39,    40,    32,
    33,    34,    35,   nil,   nil,   nil,   nil,   nil,   nil,    26,
   nil,    27,    28,    29,    30,   nil,   nil,    36,    39,    40,
    32,    33,    34,    35,   nil,   nil,   nil,   nil,   nil,   nil,
    26,   nil,    27,    28,    29,    30,   nil,   nil,    36,    39,
    40,    32,    33,    34,    35,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    27,    28,    29,    30,   nil,   nil,    36,
    39,    40,    32,    33,    34,    35,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    27,    28,    29,    30,   nil,   nil,
    36,    39,    40,    32,    33,    34,    35,   nil,   nil,   nil,
   nil,   nil,   nil,    26,   nil,    27,    28,    29,    30,   nil,
   nil,    36,    39,    40,    32,    33,    34,    35,   nil,   nil,
   nil,   nil,   nil,   nil,    26,   nil,    27,    28,    29,    30,
   nil,   nil,    36,    39,    40,    32,    33,    34,    35,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   nil,    27,    28,    29,
    30,   nil,   nil,    36,    39,    40,    32,    33,    34,    35,
   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,    27,    28,
    29,    30,   nil,   nil,    36,    39,    40,    32,    33,    34,
    35,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,    27,
    28,    29,    30,   nil,   nil,    36,    39,    40,    32,    33,
    34,    35,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,
    27,    28,    29,    30,   nil,   nil,    36,    39,    40,    32,
    33,    34,    35,    26,   nil,    27,    28,    29,    30,   nil,
   nil,   nil,   nil,   nil,    32,    33,    34,    35,    39,    40,
   nil,   nil,   nil,   nil,    26,   nil,    27,    28,    29,    30,
   nil,   nil,    36,    39,    40,    32,    33,    34,    35,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   nil,    27,    28,    29,
    30,   nil,   nil,    36,    39,    40,    32,    33,    34,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,
    27,    28,    29,    30,    36,    39,    40,   -98,   nil,    32,
    33,    34,    35,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,    39,    40,
    26,   nil,    27,    28,    29,    30,   nil,   nil,   -95,   nil,
   nil,    32,    33,    34,    35,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
    39,    40 ]

racc_action_check = [
     4,     4,   171,     4,     4,     4,     4,   159,   159,     4,
    99,   136,     4,     4,     4,     4,   188,   188,   188,   188,
   155,    54,    54,    54,    54,    54,    54,    54,    54,    54,
     4,     4,     4,     4,   102,   188,   188,     4,     4,     4,
     4,     4,   222,   222,   103,   222,   222,   222,   222,   136,
   104,   222,    55,    55,   222,   222,   222,   222,   155,   158,
   158,   158,   158,   158,   158,   158,   158,   158,    56,    56,
   215,   215,   222,   222,   222,   222,   160,   160,   107,   222,
   222,   222,   222,   222,     9,     9,    98,     9,     9,     9,
     9,    97,   110,     9,   111,   112,     9,     9,     9,     9,
   203,   203,   203,   203,    60,    60,   113,    96,    60,    60,
    94,    73,   123,    72,     9,     9,     9,     9,   125,   203,
   203,     9,     9,     9,     9,     9,   209,   209,   127,   209,
   209,   209,   209,    69,   132,   209,   133,    68,   209,   209,
   209,   209,   135,    62,    47,   145,   147,   148,   150,   151,
   152,   154,    46,    42,    41,    30,   209,   209,   209,   209,
   162,   163,    29,   209,   209,   209,   209,   209,   109,   109,
    28,   109,   109,   109,   109,   168,   169,   109,    27,   100,
   109,   109,   109,   109,   172,   175,   179,   180,   182,    10,
     8,   185,     6,   187,     5,   189,   193,   194,   109,   109,
   109,   109,   195,   196,   197,   109,   109,   109,   109,   109,
   167,   167,   200,   167,   167,   167,   167,     0,     3,   167,
   210,     2,   167,   167,   167,   167,   216,   217,   219,     1,
   225,   226,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   167,   167,   167,   167,   nil,   nil,   nil,   167,   167,   167,
   167,   167,   186,   186,   nil,   186,   186,   186,   186,   nil,
   nil,   186,   nil,   nil,   186,   186,   186,   186,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   186,   186,   186,   186,   nil,   nil,   nil,   186,
   186,   186,   186,   186,   183,   183,   nil,   183,   183,   183,
   183,   nil,   nil,   183,   nil,   nil,   183,   183,   183,   183,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   183,   183,   183,   183,   nil,   nil,
   nil,   183,   183,   183,   183,   183,   165,   nil,   165,   165,
   165,   165,   nil,   nil,   nil,   nil,   nil,   165,   165,   165,
   165,   nil,   nil,   nil,   nil,   nil,   nil,   170,   nil,   170,
   170,   170,   170,   nil,   nil,   165,   165,   165,   170,   170,
   170,   170,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,
   184,   184,   184,   184,   nil,   nil,   170,   170,   170,   184,
   184,   184,   184,   nil,   nil,   nil,   nil,   nil,   nil,    17,
   nil,    17,    17,    17,    17,   nil,   nil,   184,   184,   184,
    17,    17,    17,    17,   nil,   nil,   nil,   nil,   nil,   nil,
   116,   nil,   116,   116,   116,   116,   nil,   nil,    17,    17,
    17,   116,   116,   116,   116,   nil,   nil,   nil,   nil,   nil,
   nil,   117,   nil,   117,   117,   117,   117,   nil,   nil,   116,
   116,   116,   117,   117,   117,   117,   nil,   nil,   nil,   nil,
   nil,   nil,   124,   nil,   124,   124,   124,   124,   nil,   nil,
   117,   117,   117,   124,   124,   124,   124,   nil,   nil,   nil,
   nil,   nil,   nil,   115,   nil,   115,   115,   115,   115,   nil,
   nil,   124,   124,   124,   115,   115,   115,   115,   nil,   nil,
   nil,   nil,   nil,   nil,   141,   nil,   141,   141,   141,   141,
   nil,   nil,   115,   115,   115,   141,   141,   141,   141,   nil,
   nil,   nil,   nil,   nil,   nil,    67,   nil,    67,    67,    67,
    67,   nil,   nil,   141,   141,   141,    67,    67,    67,    67,
   nil,   nil,   nil,   nil,   nil,   nil,    70,   nil,    70,    70,
    70,    70,   nil,   nil,    67,    67,    67,    70,    70,    70,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   130,
   130,   130,   130,   nil,   nil,    70,    70,    70,   130,   130,
   130,   130,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,
    57,    57,    57,    57,   nil,   nil,   130,   130,   130,    57,
    57,    57,    57,    58,   nil,    58,    58,    58,    58,   nil,
   nil,   nil,   nil,   nil,    58,    58,    58,    58,    57,    57,
   nil,   nil,   nil,   nil,   134,   nil,   134,   134,   134,   134,
   nil,   nil,    58,    58,    58,   134,   134,   134,   134,   nil,
   nil,   nil,   nil,   nil,   nil,   108,   nil,   108,   108,   108,
   108,   nil,   nil,   134,   134,   134,   108,   108,   108,   108,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    66,    66,    66,    66,   108,   108,   108,    66,   nil,    66,
    66,    66,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,    66,    66,
   101,   nil,   101,   101,   101,   101,   nil,   nil,   101,   nil,
   nil,   101,   101,   101,   101,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   101,
   101,   101 ]

racc_action_pointer = [
   215,   229,   174,   218,    -5,   147,   180,   nil,   187,    79,
   185,   nil,   nil,   nil,   nil,   nil,   nil,   393,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   172,   162,   154,
   143,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   140,   147,   nil,   nil,   nil,   146,   136,   nil,   nil,
   nil,   nil,   nil,   nil,    -1,    21,    35,   582,   597,   nil,
    95,   nil,   137,   nil,   nil,   nil,   662,   519,   131,    94,
   540,   nil,    65,   107,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   103,   nil,    91,    82,    76,    -3,
   165,   694,    28,    29,    29,   nil,   nil,    71,   639,   163,
    88,    88,    56,    98,   nil,   477,   414,   435,   nil,   nil,
   nil,   nil,   nil,   104,   456,   111,   nil,   121,   nil,   nil,
   561,   nil,   127,    96,   618,   134,     3,   nil,   nil,   nil,
   nil,   498,   nil,   nil,   nil,   124,   nil,   125,   108,   nil,
   106,   145,   143,   nil,   111,    12,   nil,   nil,    37,   -24,
    43,   nil,   146,   146,   nil,   330,   nil,   205,   136,   170,
   351,   -37,   135,   nil,   nil,   169,   nil,   nil,   nil,   170,
   173,   nil,   148,   289,   372,   184,   247,   172,    -1,   191,
   nil,   nil,   nil,   175,   156,   162,   196,   165,   nil,   nil,
   204,   nil,   nil,    83,   nil,   nil,   nil,   nil,   nil,   121,
   180,   nil,   nil,   nil,   nil,    32,   222,   187,   nil,   179,
   nil,   nil,    37,   nil,   nil,   209,   191,   nil,   nil ]

racc_action_default = [
  -143,  -143,    -3,  -143,    -5,    -3,  -143,   229,  -143,    -5,
  -143,    -7,    -8,    -9,   -10,   -11,   -12,   -95,   -15,   -21,
   -27,   -33,   -34,   -36,   -37,   -38,   -39,   -46,  -143,  -143,
  -143,   -66,   -67,   -68,   -69,   -70,   -90,   -91,   -92,   -93,
   -94,  -143,  -143,  -110,  -113,  -116,  -143,  -143,    -2,  -121,
    -1,    -4,    -6,   -13,   -20,   -26,   -32,   -95,   -95,   -41,
   -62,   -48,  -143,   -42,   -43,   -44,   -95,   -95,  -143,  -143,
   -95,  -118,  -134,  -143,   -16,   -17,   -77,   -78,   -79,   -80,
   -81,   -82,   -83,   -84,   -85,   -22,   -23,   -86,   -87,   -28,
   -29,   -88,   -89,   -35,  -143,   -47,   -65,  -143,  -143,  -143,
  -143,   -73,  -143,  -143,  -100,  -101,  -102,  -143,   -95,    -5,
  -143,  -143,  -143,  -143,   -14,   -95,   -95,   -95,   -40,   -51,
   -63,   -53,   -55,  -143,   -95,  -143,   -71,  -143,   -96,   -97,
   -95,  -103,  -143,  -143,   -95,  -137,  -124,  -133,   -18,   -24,
   -30,   -95,   -57,   -60,   -50,   -76,   -45,  -100,  -143,  -111,
  -143,  -143,  -143,  -135,  -143,  -124,  -125,  -126,   -20,   -26,
   -32,   -64,   -62,  -143,   -72,   -95,   -99,    -5,  -143,  -143,
   -95,  -143,  -142,  -122,  -123,  -130,   -19,   -25,   -31,   -65,
   -62,   -74,  -143,    -5,   -95,  -143,    -5,  -140,  -143,  -143,
  -128,   -58,   -61,   -76,  -107,  -143,  -143,  -143,  -119,  -136,
  -143,  -141,  -127,   -95,   -75,  -104,  -105,  -112,  -114,    -5,
  -143,  -138,  -129,  -131,  -132,  -143,  -143,  -143,  -120,  -142,
  -106,  -108,    -5,  -115,  -117,  -140,  -143,  -139,  -109 ]

racc_goto_table = [
     8,    53,    96,    89,   119,    51,    85,    74,   104,   164,
   110,   187,   154,   129,   199,   156,     4,   201,    68,    48,
   159,    56,   117,   160,    93,    57,   116,   214,    58,    59,
   102,   174,   213,    95,   156,    61,    60,   125,    62,    55,
   139,    97,    94,    98,    99,   162,   163,   141,   158,   145,
   106,   107,   227,   193,   103,   138,   166,   204,   225,   115,
    54,   205,   148,   220,   215,   140,   168,    69,   216,   152,
   111,   210,   147,   112,    73,    72,   189,   175,   212,   203,
   221,     1,   172,   219,   nil,   126,   nil,   191,   nil,   nil,
   nil,   nil,   132,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   179,   133,   nil,   178,   143,   nil,
   177,   176,   nil,   nil,   106,   nil,   nil,   nil,   151,   nil,
   nil,   nil,   192,   nil,   nil,   161,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   181,
   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   182,   nil,   nil,   nil,   nil,   196,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,
   nil,   nil,   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   217,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   226 ]

racc_goto_check = [
     3,     6,    46,    27,    47,     3,    21,    15,    63,    56,
    14,    85,    78,    64,    86,    12,     2,    36,    70,     2,
    25,    28,    30,    31,    32,    34,    24,    37,    38,    39,
    40,    78,    36,    41,    12,    42,    43,    44,    45,    22,
    20,    48,     6,    49,    50,    51,    53,    54,    19,    57,
     6,     6,    86,    58,    61,    14,    64,    56,    85,    18,
    16,    66,    67,    68,    69,    26,    71,    72,    73,    74,
    75,    76,    63,    77,    13,    79,    81,    82,    83,    84,
    10,     1,    87,    88,   nil,     6,   nil,    47,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    46,     3,   nil,    27,     6,   nil,
    21,    15,   nil,   nil,     6,   nil,   nil,   nil,     6,   nil,
   nil,   nil,    46,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,    81,    14,    -4,   nil,   nil,   -16,   nil,   nil,   nil,
  -135,   nil,  -121,    21,   -60,   -47,    42,   nil,   -16,   -90,
   -76,   -49,    20,   nil,   -60,  -119,   -52,   -53,     1,   nil,
   -68,  -117,   -33,   nil,     3,   nil,  -171,  -176,     2,     2,
   -35,   -27,     8,     9,   -64,    11,   -58,   -92,   -19,   -17,
   -16,   -97,   nil,   -97,   -73,   nil,  -136,   -77,  -128,   nil,
   nil,   -12,   nil,   -58,   -91,   nil,  -133,   -69,  -152,  -142,
   -25,   -83,    23,  -140,   -66,    -1,  -127,     1,  -124,    26,
   nil,   -99,   -80,  -125,  -111,  -161,  -173,   -71,  -128 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,     9,    10,    11,    12,    13,
    14,    15,    16,   nil,    18,   nil,   nil,    75,   nil,   nil,
    19,   nil,   nil,    86,   nil,   nil,    20,   nil,   nil,    90,
   nil,   nil,    21,    22,   nil,    23,    24,    25,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   100,   nil,   nil,    31,   nil,   nil,   nil,    37,
    38,   nil,    41,   nil,   nil,   105,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   155,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 51, :_reduce_1,
  2, 52, :_reduce_none,
  0, 52, :_reduce_none,
  2, 53, :_reduce_none,
  0, 53, :_reduce_none,
  2, 55, :_reduce_6,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_12,
  0, 63, :_reduce_13,
  4, 55, :_reduce_14,
  0, 66, :_reduce_15,
  3, 56, :_reduce_none,
  0, 68, :_reduce_17,
  0, 69, :_reduce_18,
  5, 65, :_reduce_none,
  0, 65, :_reduce_none,
  0, 72, :_reduce_21,
  3, 64, :_reduce_none,
  0, 74, :_reduce_23,
  0, 75, :_reduce_24,
  5, 71, :_reduce_none,
  0, 71, :_reduce_none,
  0, 78, :_reduce_27,
  3, 70, :_reduce_none,
  0, 80, :_reduce_29,
  0, 81, :_reduce_30,
  5, 77, :_reduce_none,
  0, 77, :_reduce_none,
  1, 76, :_reduce_none,
  0, 84, :_reduce_34,
  3, 76, :_reduce_35,
  1, 82, :_reduce_none,
  1, 82, :_reduce_37,
  1, 82, :_reduce_none,
  0, 88, :_reduce_39,
  4, 82, :_reduce_40,
  2, 85, :_reduce_none,
  2, 85, :_reduce_42,
  2, 85, :_reduce_43,
  0, 90, :_reduce_44,
  5, 85, :_reduce_none,
  0, 93, :_reduce_46,
  2, 89, :_reduce_none,
  1, 89, :_reduce_none,
  0, 95, :_reduce_49,
  4, 92, :_reduce_50,
  2, 91, :_reduce_none,
  0, 98, :_reduce_52,
  2, 91, :_reduce_none,
  0, 99, :_reduce_54,
  2, 91, :_reduce_none,
  0, 100, :_reduce_56,
  0, 101, :_reduce_57,
  6, 91, :_reduce_none,
  0, 102, :_reduce_59,
  0, 103, :_reduce_60,
  6, 96, :_reduce_none,
  0, 96, :_reduce_none,
  0, 104, :_reduce_63,
  3, 97, :_reduce_64,
  0, 97, :_reduce_none,
  1, 86, :_reduce_none,
  1, 86, :_reduce_67,
  1, 86, :_reduce_68,
  1, 86, :_reduce_69,
  1, 86, :_reduce_70,
  0, 107, :_reduce_71,
  3, 94, :_reduce_none,
  0, 94, :_reduce_none,
  0, 108, :_reduce_74,
  4, 106, :_reduce_none,
  0, 106, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 83, :_reduce_none,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  1, 109, :_reduce_93,
  1, 110, :_reduce_94,
  0, 112, :_reduce_95,
  4, 87, :_reduce_96,
  2, 111, :_reduce_none,
  0, 111, :_reduce_none,
  3, 114, :_reduce_none,
  0, 114, :_reduce_none,
  1, 113, :_reduce_101,
  1, 115, :_reduce_none,
  0, 117, :_reduce_103,
  9, 60, :_reduce_104,
  0, 119, :_reduce_105,
  3, 116, :_reduce_none,
  0, 116, :_reduce_none,
  1, 118, :_reduce_none,
  3, 118, :_reduce_none,
  0, 120, :_reduce_110,
  0, 121, :_reduce_111,
  9, 57, :_reduce_112,
  0, 122, :_reduce_113,
  0, 123, :_reduce_114,
  11, 58, :_reduce_none,
  1, 59, :_reduce_116,
  11, 61, :_reduce_none,
  0, 125, :_reduce_118,
  0, 126, :_reduce_119,
  10, 62, :_reduce_none,
  0, 129, :_reduce_121,
  7, 54, :_reduce_122,
  2, 128, :_reduce_none,
  0, 128, :_reduce_none,
  1, 130, :_reduce_none,
  0, 132, :_reduce_126,
  4, 130, :_reduce_127,
  0, 134, :_reduce_128,
  3, 131, :_reduce_129,
  0, 131, :_reduce_none,
  1, 133, :_reduce_131,
  1, 133, :_reduce_none,
  2, 127, :_reduce_none,
  0, 127, :_reduce_none,
  0, 137, :_reduce_135,
  4, 124, :_reduce_none,
  0, 124, :_reduce_none,
  0, 138, :_reduce_138,
  5, 136, :_reduce_none,
  0, 136, :_reduce_none,
  2, 135, :_reduce_141,
  0, 135, :_reduce_none ]

racc_reduce_n = 143

racc_shift_n = 229

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :WORD_RETURN => 5,
  "(" => 6,
  ")" => 7,
  :ID => 8,
  :OP_INCREMENT => 9,
  :OP_DECREMENT => 10,
  :WORD_NEW => 11,
  :CLASS_ID => 12,
  "." => 13,
  "[" => 14,
  "]" => 15,
  :OP_ASIGN => 16,
  :STRING => 17,
  :WORD_TRUE => 18,
  :WORD_FALSE => 19,
  :WORD_NULL => 20,
  "," => 21,
  :OP_EQUAL => 22,
  :OP_NOT_EQUAL => 23,
  :OP_GREATER => 24,
  :OP_GREATER_EQUAL => 25,
  :OP_LESS => 26,
  :OP_LESS_EQUAL => 27,
  :WORD_AND => 28,
  :WORD_OR => 29,
  :WORD_XOR => 30,
  :OP_PLUS => 31,
  :OP_MINUS => 32,
  :OP_MULTIPLY => 33,
  :OP_DIVIDE => 34,
  :WORD_NOT => 35,
  :INT => 36,
  :FLOAT => 37,
  :WORD_IF => 38,
  "{" => 39,
  "}" => 40,
  :WORD_ELSE => 41,
  :WORD_WHILE => 42,
  :WORD_DO => 43,
  :BLOCK_VERBOSE => 44,
  :WORD_FOR => 45,
  :WORD_FUN => 46,
  :WORD_CLASS => 47,
  :WORD_EXTENDS => 48,
  "=" => 49 }

racc_nt_base = 50

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "WORD_RETURN",
  "\"(\"",
  "\")\"",
  "ID",
  "OP_INCREMENT",
  "OP_DECREMENT",
  "WORD_NEW",
  "CLASS_ID",
  "\".\"",
  "\"[\"",
  "\"]\"",
  "OP_ASIGN",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "WORD_XOR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "WORD_NOT",
  "INT",
  "FLOAT",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "BLOCK_VERBOSE",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "\"=\"",
  "$start",
  "phast",
  "class_decs",
  "estatutos",
  "bloque_class",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloque_fun",
  "@1",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor_unary_operand",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "factor",
  "op_unary",
  "@11",
  "llamada",
  "estatico",
  "arreglo",
  "@12",
  "tipo_llamada",
  "@13",
  "vars",
  "funcs",
  "@14",
  "argumentos",
  "@15",
  "arr_acc",
  "asign",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "@21",
  "@22",
  "numero",
  "args_aux",
  "@23",
  "@24",
  "int",
  "float",
  "arr_elems",
  "@25",
  "arr_elem",
  "arr_elems_aux",
  "arr_elem_wrapper",
  "else",
  "@26",
  "aux_else",
  "@27",
  "@28",
  "@29",
  "@30",
  "@31",
  "params",
  "@32",
  "@33",
  "class_extras",
  "class_body",
  "@34",
  "class_body_aux",
  "class_def_var_aux",
  "@35",
  "pos_vars",
  "@36",
  "def_param",
  "params_aux",
  "@37",
  "@38" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_1(val, _values, result)
    
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_6(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_12(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_13(val, _values, result)
    return_quad 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_14(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_15(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_17(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_18(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_21(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_23(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_24(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_27(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_29(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_30(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_34(val, _values, result)
    @pOper.push Phast::NOT
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_35(val, _values, result)
    fun3 -1
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_37(val, _values, result)
    fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_39(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_40(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_42(val, _values, result)
     pre_affect "+" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_43(val, _values, result)
     pre_affect "-" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_44(val, _values, result)
     crea_instancia 
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_46(val, _values, result)
     fun1(llame_var(@prev_token[1])) 
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_49(val, _values, result)
     fun_prepare @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_50(val, _values, result)
     fun_call 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_52(val, _values, result)
     post_affect "+" 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_54(val, _values, result)
     post_affect "-" 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_56(val, _values, result)
     @inst = @prev_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_57(val, _values, result)
     llame_attr @curr_token[1] 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_59(val, _values, result)
     load_arr 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_60(val, _values, result)
     access_array_index 
    result
  end
.,.,

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_63(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_64(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_67(val, _values, result)
     guarda_cte @curr_token[1], String(@curr_token[1]) , 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_68(val, _values, result)
     guarda_cte @curr_token[1], true , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_69(val, _values, result)
     guarda_cte @curr_token[1], false , 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_70(val, _values, result)
     guarda_cte @curr_token[1], nil , 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_71(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_74(val, _values, result)
     argument 
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_93(val, _values, result)
     guarda_cte @curr_token[1], Integer(@curr_token[1]) , 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_94(val, _values, result)
     guarda_cte @curr_token[1], Float(@curr_token[1]) , 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_95(val, _values, result)
     openArreglo 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_96(val, _values, result)
     closeArreglo 
    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_101(val, _values, result)
     copy_value 
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_103(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_104(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_105(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_110(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_111(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_112(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_113(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_114(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_116(val, _values, result)
     verbose @curr_token[1] 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_118(val, _values, result)
     aumenta_scope @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_119(val, _values, result)
     end_fun 
    result
  end
.,.,

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_121(val, _values, result)
     define_objeto @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_122(val, _values, result)
     termina_objeto 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_126(val, _values, result)
     define_attr @curr_token[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_127(val, _values, result)
     vaciar_pOperandos 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_128(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_129(val, _values, result)
     asign_attr 
    result
  end
.,.,

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_131(val, _values, result)
    fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_135(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 136 omitted

# reduce 137 omitted

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_138(val, _values, result)
     param(llame_var(@curr_token[1])) 
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_141(val, _values, result)
     fun1(llama_cte(@curr_token[1])) 
    result
  end
.,.,

# reduce 142 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
