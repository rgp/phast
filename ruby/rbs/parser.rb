#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


module Phast
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 111)

    def initialize(scanner)
        @scanner = scanner
        @scope = 0
        @quads = []
        @next_quad = 0
        @poper = []
        @operandos = []
        @psaltos = []
        @tmp_var_id = 0
        @tmp_v = []
    end

    def parse
        @scopes = [{}]
        do_parse
    end

    def next_token
        @curr_token = @scanner.next_token
    end

    def llame_var
        if @scopes.last.include? @curr_token[1]
        else
        guarda_var
        end
    end

    def guarda_var
        @scopes.last[@curr_token[1]] = [@scope,nil,$lineno] #[scope,type,declared_at]
    end

    def aumenta_scope
        @scopes.push Hash.new
        @scope += 1
    end

    def disminuye_scope
        last_scope = @scopes.pop
        @scope -= 1
    end

    def genera(w,x,y,z)
        quad = []
        quad.push w
        quad.push x
        quad.push y
        quad.push z
    end
    
    def rellena(n)
        incomplete_quad = @quads.delete_at n
        @quads.insert(n, genera(incomplete_quad[0], incomplete_quad[1], nil, @next_quad))
    end
    
    def fun1
        # puts "Meter #{@curr_token[1]} a pila Operandos" 
        @operandos.push @curr_token[1]
    end

    def fun2
        # puts "Meter #{@curr_token[1]} a pila Operadores" 
        @poper.push @curr_token[1]
    end

    def fun3(nivel)
        # puts "Checar el top de Poper tiene operador pendiente"
        if !@poper.empty?
            op = @poper.last
            case
            when nivel == 0
                if(op == '*' || op == '/')
                    @poper.pop
                    oper = @operandos.pop
                    oper1 = @operandos.pop
                    @tmp_var_id += 1
                    @operandos.push "t#{@tmp_var_id}"
                    @quads.push genera(op, oper1, oper, "t#{@tmp_var_id}")
                    @next_quad += 1
                    # puts "#{op}\t#{oper1}\t#{oper}\tt#{@tmp_var_id}"
                end
            when nivel == 1
                if(op == '+' || op == '-')
                    @poper.pop
                    oper = @operandos.pop
                    oper1 = @operandos.pop
                    @tmp_var_id += 1
                    @operandos.push "t#{@tmp_var_id}"
                    @quads.push genera(op, oper1, oper, "t#{@tmp_var_id}")
                    @next_quad += 1
                    # puts "#{op}\t#{oper1}\t#{oper}\tt#{@tmp_var_id}"
                end
            when nivel == 2
                if(op == "and" || op == "or" || op == "<" || op == ">" || op == "<=" || op == ">=")
                    @poper.pop
                    oper = @operandos.pop
                    oper1 = @operandos.pop
                    @tmp_var_id += 1
                    @operandos.push "t#{@tmp_var_id}"
                    @quads.push genera(op, oper1, oper, "t#{@tmp_var_id}")
                    @next_quad += 1
                    # puts "#{op}\t#{oper1}\t#{oper}\tt#{@tmp_var_id}"
                end
            when nivel == 3
                if(op == "=")
                    @poper.pop
                    oper = @operandos.pop
                    oper1 = @operandos.pop
                    # @tmp_var_id += 1
                    @operandos.push oper1
                    @quads.push genera(op, oper, nil, oper1)
                    @next_quad += 1
                    # puts "#{op}\t#{oper}\t\t#{oper1}"
                end
            end
        end
    end

    def if_quad(step)
        case
        when step == 1
            @psaltos.push @next_quad
            condicion = @operandos.pop
            @quads.push genera("GotoF", condicion, nil, nil)
            @next_quad += 1
        when step ==  2
            rellena(@psaltos.pop)
        when step == 3
            f = @psaltos.pop
            @psaltos.push @next_quad
            @quads.push genera("Goto", nil, nil, nil)
            @next_quad += 1
            rellena(f)
        end
    end

    def while_quad(step)
        case
        when step == 1
            @psaltos.push @next_quad
        when step ==  2
            condicion = @operandos.pop
            @psaltos.push @next_quad
            @quads.push genera("GotoF", condicion, nil, nil)
            @next_quad += 1
        when step == 3
            f = @psaltos.pop
            r = @psaltos.pop
            @quads.push genera("Goto", nil, nil, r)
            @next_quad += 1
            rellena(f)
        end
    end

    def do_while_quad(step)
        case
        when step == 1
            @psaltos.push @next_quad
        when step ==  2
            condicion = @operandos.pop
            @quads.push genera("GotoV", condicion, nil, @psaltos.pop)
        end
    end

    def print_quads
        i = 0;
        until @quads.empty?
            quad = @quads.shift
            puts "#{i}.-\t#{quad[0]}\t#{quad[1]}\t#{quad[2]}\t#{quad[3]}\n"
            i += 1
        end
        puts "next quad:#{@next_quad}"
    end

    def on_error(t,val,vstack)
        raise ParseError, sprintf("\nError de sintaxis. Se encontro %s (%s) inesperado", val.inspect, token_to_str(t) || '?')
    end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -3,   120,    16,    20,    23,    25,    28,    31,   137,     4,
    53,    54,    80,    81,    16,    20,    23,    25,    28,    31,
   137,     4,    72,    74,    60,    19,    22,   109,    96,    30,
    94,   103,    95,     8,    12,    15,    18,    19,    22,    72,
    74,    30,   101,   -96,   100,     8,    12,    15,    18,   -10,
   -10,    80,    81,    30,   179,   -96,    16,    20,    23,    25,
    28,    31,    99,     4,   118,   119,   107,   124,    16,    20,
    23,    25,    28,    31,   125,     4,    97,   127,   129,    19,
    22,   130,   132,    30,   133,    -3,    87,     8,    12,    15,
    18,    19,    22,    86,   140,    30,    85,    -3,   142,     8,
    12,    15,    18,    16,    20,    23,    25,    28,    31,    76,
     4,    71,    60,    58,   147,    16,    20,    23,    25,    28,
    31,   149,     4,   150,    57,    53,    19,    22,    49,    47,
    30,   127,    -3,   157,     8,    12,    15,    18,    19,    22,
   158,    44,    30,   160,    -3,    39,     8,    12,    15,    18,
    16,    20,    23,    25,    28,    31,   163,     4,   165,   166,
   167,   168,    16,    20,    23,    25,    28,    31,   170,     4,
   171,   172,    34,    19,    22,   177,   178,    30,     2,    -3,
   149,     8,    12,    15,    18,    19,    22,     3,   160,    30,
   185,    -3,   nil,     8,    12,    15,    18,    16,    20,    23,
    25,    28,    31,   nil,     4,    16,    20,    23,    25,    28,
    31,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    22,   nil,   nil,   nil,   nil,   nil,   nil,    19,    22,
    16,    20,    23,    25,    28,    31,   nil,     4,    16,    20,
    23,    25,    28,    31,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    19,    22,   nil,   nil,   nil,   nil,   nil,
   nil,    19,    22,    16,    20,    23,    25,    28,    31,   nil,
     4,    16,    20,    23,    25,    28,    31,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    22,   nil,   nil,
   nil,   nil,   nil,   nil,    19,    22,    16,    20,    23,    25,
    28,    31,   nil,     4,    16,    20,    23,    25,    28,    31,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
    22,   nil,   nil,   nil,   nil,   nil,   nil,    19,    22,    16,
    20,    23,    25,    28,    31,   nil,     4,    16,    20,    23,
    25,    28,    31,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,    22,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    22,    16,    20,    23,    25,    28,    31,   nil,     4,
    16,    20,    23,    25,    28,    31,   nil,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,    22,   nil,   nil,   nil,
   nil,   nil,   nil,    19,    22,    16,    20,    23,    25,    28,
    31,   nil,     4,    16,    20,    23,    25,    28,    31,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,    22,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    22,    16,    20,
    23,    25,    28,    31,   nil,     4,    16,    20,    23,    25,
    28,    31,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,    22,   nil,   nil,   nil,   nil,   nil,   nil,    19,
    22,    16,    20,    23,    25,    28,    31,   nil,     4,    20,
    23,    25,    28,    31,   nil,     4,    64,    66,    67,    68,
    69,    70,    61,    62,    19,    22,   nil,   nil,   nil,   nil,
   nil,    19,    22,    64,    66,    67,    68,    69,    70,    61,
    62 ]

racc_action_check = [
     2,   103,     2,     2,     2,     2,     2,     2,   136,     2,
    33,    33,    48,    48,     7,     7,     7,     7,     7,     7,
   119,     7,    43,    43,    88,     2,     2,    92,    77,     2,
    77,    86,    77,     2,     2,     2,     2,     7,     7,   123,
   123,     7,    85,   136,    84,     7,     7,     7,     7,     7,
     7,   131,   131,   175,   175,   119,   132,   132,   132,   132,
   132,   132,    83,   132,   101,   102,    90,   109,   167,   167,
   167,   167,   167,   167,   110,   167,    78,   112,   113,   132,
   132,   114,   116,   132,   117,   132,    57,   132,   132,   132,
   132,   167,   167,    54,   122,   167,    53,   167,   124,   167,
   167,   167,   167,    76,    76,    76,    76,    76,    76,    45,
    76,    42,    38,    37,   133,   147,   147,   147,   147,   147,
   147,   134,   147,   135,    35,   138,    76,    76,    30,    18,
    76,   143,    76,   144,    76,    76,    76,    76,   147,   147,
   146,    11,   147,   148,   147,     5,   147,   147,   147,   147,
   179,   179,   179,   179,   179,   179,   152,   179,   154,   155,
   157,   158,   140,   140,   140,   140,   140,   140,   159,   140,
   160,   164,     3,   179,   179,   173,   174,   179,     0,   179,
   176,   179,   179,   179,   179,   140,   140,     1,   182,   140,
   183,   140,   nil,   140,   140,   140,   140,    47,    47,    47,
    47,    47,    47,   nil,    47,   142,   142,   142,   142,   142,
   142,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    47,    47,   nil,   nil,   nil,   nil,   nil,   nil,   142,   142,
    89,    89,    89,    89,    89,    89,   nil,    89,    91,    91,
    91,    91,    91,    91,   nil,    91,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    89,    89,   nil,   nil,   nil,   nil,   nil,
   nil,    91,    91,    87,    87,    87,    87,    87,    87,   nil,
    87,   130,   130,   130,   130,   130,   130,   nil,   130,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    87,    87,   nil,   nil,
   nil,   nil,   nil,   nil,   130,   130,    94,    94,    94,    94,
    94,    94,   nil,    94,   127,   127,   127,   127,   127,   127,
   nil,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,
    94,   nil,   nil,   nil,   nil,   nil,   nil,   127,   127,    96,
    96,    96,    96,    96,    96,   nil,    96,    97,    97,    97,
    97,    97,    97,   nil,    97,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    96,    96,   nil,   nil,   nil,   nil,   nil,   nil,
    97,    97,    49,    49,    49,    49,    49,    49,   nil,    49,
    50,    50,    50,    50,    50,    50,   nil,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    49,   nil,   nil,   nil,
   nil,   nil,   nil,    50,    50,    98,    98,    98,    98,    98,
    98,   nil,    98,   111,   111,   111,   111,   111,   111,   nil,
   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    98,    98,
   nil,   nil,   nil,   nil,   nil,   nil,   111,   111,    71,    71,
    71,    71,    71,    71,   nil,    71,    60,    60,    60,    60,
    60,    60,   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    71,    71,   nil,   nil,   nil,   nil,   nil,   nil,    60,
    60,     4,     4,     4,     4,     4,     4,   nil,     4,   149,
   149,   149,   149,   149,   nil,   149,   121,   121,   121,   121,
   121,   121,   121,   121,     4,     4,   nil,   nil,   nil,   nil,
   nil,   149,   149,    40,    40,    40,    40,    40,    40,    40,
    40 ]

racc_action_pointer = [
   176,   187,    -3,   172,   456,   142,   nil,     9,   nil,   nil,
   nil,   137,   nil,   nil,   nil,   nil,   nil,   nil,   119,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   118,   nil,   nil,   -30,   nil,    94,   nil,   100,    97,   nil,
   477,   nil,   101,    -4,   nil,    76,   nil,   192,   -12,   357,
   365,   nil,   nil,    91,    88,   nil,   nil,    55,   nil,   nil,
   431,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   423,   nil,   nil,   nil,   nil,    98,    18,    72,   nil,
   nil,   nil,   nil,    51,    33,    32,   -11,   258,     9,   225,
    55,   233,    -7,   nil,   291,   nil,   324,   332,   390,   nil,
   nil,    59,    32,    -4,   nil,   nil,   nil,   nil,   nil,    31,
    61,   398,    62,    67,    77,   nil,    49,    73,   nil,    15,
   nil,   460,    61,    13,    88,   nil,   nil,   299,   nil,   nil,
   266,    27,    51,    81,    91,    89,     3,   nil,    85,   nil,
   157,   nil,   200,   116,   122,   nil,   106,   110,   128,   463,
   nil,   nil,   142,   nil,   124,   148,   nil,   127,   126,   134,
   165,   nil,   nil,   nil,   167,   nil,   nil,    63,   nil,   nil,
   nil,   nil,   nil,   171,   142,    21,   150,   nil,   nil,   145,
   nil,   nil,   173,   156,   nil,   nil ]

racc_action_default = [
  -112,  -112,   -10,  -112,   -70,  -112,   -14,    -3,   -84,   -37,
   -26,  -112,   -87,   -39,    -5,   -90,   -34,    -6,  -112,   -66,
   -38,    -7,   -67,   -40,    -8,   -41,   -20,    -9,   -42,   -32,
  -112,   -43,   -33,  -112,   186,   -75,   -76,  -112,   -72,    -1,
   -19,    -2,  -112,   -31,    -4,  -112,   -35,  -112,   -25,  -112,
  -112,   -12,   -13,  -112,  -112,   -11,   -73,  -112,   -68,   -69,
  -112,   -60,   -61,   -15,   -54,   -16,   -55,   -56,   -57,   -58,
   -59,  -112,   -64,   -27,   -65,   -28,   -10,   -49,  -112,   -22,
   -62,   -63,   -21,  -112,  -112,  -112,  -103,  -112,   -72,  -112,
  -112,  -112,  -112,   -36,  -112,   -47,   -51,  -112,  -112,   -77,
   -44,  -106,  -112,  -112,   -74,   -71,   -17,   -85,   -29,  -112,
  -112,  -112,   -53,  -112,  -112,   -23,  -112,  -112,  -104,   -95,
  -102,   -19,  -112,   -31,  -112,   -46,   -48,  -112,   -50,   -45,
  -112,   -25,   -10,  -112,  -111,  -112,   -95,   -98,  -112,   -18,
   -10,   -30,  -112,   -53,  -112,   -24,  -112,   -10,  -109,  -112,
   -93,   -94,  -101,   -97,  -112,  -112,   -52,  -112,   -81,  -112,
  -112,  -105,  -110,  -100,  -112,   -86,   -88,   -10,   -79,   -78,
   -92,  -107,   -99,  -112,  -112,  -112,  -111,   -89,   -91,   -10,
   -80,   -82,  -109,  -112,  -108,   -83 ]

racc_goto_table = [
     5,    36,    51,    82,    63,    41,    38,    73,    59,    78,
   148,   161,   128,   135,    50,    48,    98,   131,   108,   121,
    43,    91,   123,   162,    93,    46,    77,   115,   113,   111,
   151,    89,    37,    40,    52,   104,    56,   169,   116,   180,
   175,    42,   122,   156,    45,   184,    83,    84,   173,   117,
   102,   106,   182,    55,   164,   152,   181,    36,   105,     1,
   134,   176,    88,   nil,   nil,   nil,   nil,   nil,    90,   nil,
   nil,   nil,   nil,   nil,    92,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    36,   139,   145,   141,   nil,   nil,
   nil,   110,   nil,   112,   114,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   153,   126,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   143,   nil,   nil,   144,   nil,   nil,
   146,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,   155,
   nil,   nil,   nil,   nil,   nil,   159,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183 ]

racc_goto_check = [
     2,     4,    12,    21,    15,     2,    44,    27,    45,    14,
    63,    64,    42,    58,    39,    22,    24,    25,    26,    19,
    28,    30,    31,    33,    34,    35,    36,    20,    40,    41,
    58,    18,    43,    16,    13,    46,    47,    48,    49,    50,
    51,    52,    53,    42,    54,    64,     4,     4,    55,    56,
    57,    14,    63,    10,    60,    62,     8,     4,    45,     1,
    65,    66,    44,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,    15,    21,    27,   nil,   nil,
   nil,     4,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,     4,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     4,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    59,    -2,   nil,    -3,   nil,   nil,   nil,  -119,   nil,
    20,   nil,   -31,     1,   -38,   -36,    27,   nil,   -34,   -87,
   -71,   -45,   -11,   nil,   -63,   -98,   -73,   -36,    10,   nil,
   -54,   -86,   nil,  -126,   -53,     9,   -20,   nil,   nil,   -17,
   -68,   -66,  -100,    28,     2,   -30,   -52,     1,  -121,   -61,
  -136,  -128,    33,   -65,    32,  -118,   -52,   -36,  -106,   nil,
   -98,   nil,   -82,  -124,  -137,   -58,  -110 ]

racc_goto_default = [
   nil,   nil,   nil,     7,    11,    14,    17,    21,    24,    27,
   nil,    33,   nil,   nil,     6,   nil,   nil,    65,   nil,   nil,
    26,   nil,   nil,    79,   nil,   nil,    10,   nil,   nil,    75,
   nil,   nil,    29,    32,   nil,   nil,   nil,     9,    13,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,
   nil,   138,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 44, :_reduce_1,
  2, 45, :_reduce_none,
  0, 45, :_reduce_none,
  2, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  0, 54, :_reduce_10,
  2, 46, :_reduce_11,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  0, 59, :_reduce_14,
  3, 47, :_reduce_none,
  0, 61, :_reduce_16,
  0, 62, :_reduce_17,
  5, 58, :_reduce_none,
  0, 58, :_reduce_none,
  0, 65, :_reduce_20,
  3, 57, :_reduce_none,
  0, 67, :_reduce_22,
  0, 68, :_reduce_23,
  5, 64, :_reduce_none,
  0, 64, :_reduce_none,
  0, 71, :_reduce_26,
  3, 63, :_reduce_none,
  0, 73, :_reduce_28,
  0, 74, :_reduce_29,
  5, 70, :_reduce_none,
  0, 70, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_33,
  0, 78, :_reduce_34,
  0, 79, :_reduce_35,
  4, 75, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  0, 82, :_reduce_43,
  4, 76, :_reduce_44,
  3, 77, :_reduce_none,
  3, 77, :_reduce_none,
  0, 84, :_reduce_47,
  3, 77, :_reduce_48,
  0, 77, :_reduce_none,
  2, 83, :_reduce_none,
  0, 83, :_reduce_none,
  3, 85, :_reduce_none,
  0, 85, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 72, :_reduce_none,
  1, 72, :_reduce_none,
  1, 80, :_reduce_66,
  1, 80, :_reduce_67,
  3, 81, :_reduce_none,
  2, 86, :_reduce_none,
  0, 86, :_reduce_none,
  3, 88, :_reduce_none,
  0, 88, :_reduce_none,
  2, 87, :_reduce_none,
  3, 90, :_reduce_none,
  0, 90, :_reduce_none,
  1, 89, :_reduce_none,
  0, 92, :_reduce_77,
  9, 51, :_reduce_78,
  0, 94, :_reduce_79,
  3, 91, :_reduce_none,
  0, 91, :_reduce_none,
  1, 93, :_reduce_none,
  3, 93, :_reduce_none,
  0, 95, :_reduce_84,
  0, 96, :_reduce_85,
  9, 48, :_reduce_86,
  0, 97, :_reduce_87,
  0, 98, :_reduce_88,
  11, 49, :_reduce_none,
  1, 50, :_reduce_none,
  11, 52, :_reduce_none,
  8, 55, :_reduce_none,
  6, 56, :_reduce_none,
  2, 101, :_reduce_none,
  0, 101, :_reduce_none,
  0, 104, :_reduce_96,
  2, 102, :_reduce_97,
  0, 105, :_reduce_98,
  4, 102, :_reduce_none,
  1, 103, :_reduce_none,
  0, 103, :_reduce_none,
  2, 100, :_reduce_none,
  0, 100, :_reduce_none,
  0, 108, :_reduce_104,
  4, 99, :_reduce_none,
  0, 99, :_reduce_none,
  0, 109, :_reduce_107,
  5, 107, :_reduce_none,
  0, 107, :_reduce_none,
  2, 106, :_reduce_none,
  0, 106, :_reduce_none ]

racc_reduce_n = 112

racc_shift_n = 186

racc_token_table = {
  false => 0,
  :error => 1,
  :PH_OT => 2,
  :PH_CT => 3,
  ";" => 4,
  :ID => 5,
  :STRING => 6,
  :WORD_TRUE => 7,
  :WORD_FALSE => 8,
  :WORD_NULL => 9,
  "(" => 10,
  ")" => 11,
  "[" => 12,
  "]" => 13,
  :OP_ASIGN => 14,
  "," => 15,
  :OP_EQUAL => 16,
  :OP_NOT_EQUAL => 17,
  :OP_GREATER => 18,
  :OP_GREATER_EQUAL => 19,
  :OP_LESS => 20,
  :OP_LESS_EQUAL => 21,
  :WORD_AND => 22,
  :WORD_OR => 23,
  :OP_PLUS => 24,
  :OP_MINUS => 25,
  :OP_MULTIPLY => 26,
  :OP_DIVIDE => 27,
  :INT => 28,
  :FLOAT => 29,
  "=" => 30,
  ">" => 31,
  :WORD_IF => 32,
  "{" => 33,
  "}" => 34,
  :WORD_ELSE => 35,
  :WORD_WHILE => 36,
  :WORD_DO => 37,
  :VERBOSE_BLOCK => 38,
  :WORD_FOR => 39,
  :WORD_FUN => 40,
  :WORD_CLASS => 41,
  :WORD_EXTENDS => 42 }

racc_nt_base = 43

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PH_OT",
  "PH_CT",
  "\";\"",
  "ID",
  "STRING",
  "WORD_TRUE",
  "WORD_FALSE",
  "WORD_NULL",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "OP_ASIGN",
  "\",\"",
  "OP_EQUAL",
  "OP_NOT_EQUAL",
  "OP_GREATER",
  "OP_GREATER_EQUAL",
  "OP_LESS",
  "OP_LESS_EQUAL",
  "WORD_AND",
  "WORD_OR",
  "OP_PLUS",
  "OP_MINUS",
  "OP_MULTIPLY",
  "OP_DIVIDE",
  "INT",
  "FLOAT",
  "\"=\"",
  "\">\"",
  "WORD_IF",
  "\"{\"",
  "\"}\"",
  "WORD_ELSE",
  "WORD_WHILE",
  "WORD_DO",
  "VERBOSE_BLOCK",
  "WORD_FOR",
  "WORD_FUN",
  "WORD_CLASS",
  "WORD_EXTENDS",
  "$start",
  "phast",
  "estatutos",
  "estatuto",
  "expresion",
  "bloque_while",
  "bloque_do",
  "bloque_verbose",
  "bloque_if",
  "bloque_for",
  "bloques_declarativos",
  "@1",
  "bloque_fun",
  "bloque_class",
  "comparando",
  "comparando_aux",
  "@2",
  "op_comp",
  "@3",
  "@4",
  "termino",
  "termino_aux",
  "@5",
  "op_term",
  "@6",
  "@7",
  "factor",
  "factor_aux",
  "@8",
  "op_fact",
  "@9",
  "@10",
  "llamada",
  "estatico",
  "id_call",
  "@11",
  "@12",
  "numero",
  "arreglo",
  "@13",
  "argumentos",
  "@14",
  "args_aux",
  "arr_elems",
  "arr_elem",
  "arr_elems_aux",
  "arr_val",
  "arr_elem_aux",
  "else",
  "@15",
  "aux_else",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "params",
  "class_extras",
  "class_body",
  "class_body_aux",
  "class_def_var_aux",
  "@21",
  "@22",
  "def_param",
  "params_aux",
  "@23",
  "@24" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 4)
  def _reduce_1(val, _values, result)
    print_quads
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_10(val, _values, result)
     aumenta_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_11(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_14(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_16(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_17(val, _values, result)
    fun3 2
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_20(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_22(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_23(val, _values, result)
    fun3 1
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_26(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_28(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_29(val, _values, result)
    fun3 0
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_33(val, _values, result)
    fun1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_34(val, _values, result)
     llame_var
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_35(val, _values, result)
     fun1 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_43(val, _values, result)
    fun4
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_44(val, _values, result)
    fun5
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_47(val, _values, result)
    fun2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_48(val, _values, result)
    fun3 3
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_66(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_67(val, _values, result)
    
    result
  end
.,.,

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_77(val, _values, result)
    if_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_78(val, _values, result)
    if_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_79(val, _values, result)
    if_quad 3
    result
  end
.,.,

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_84(val, _values, result)
    while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_85(val, _values, result)
    while_quad 2
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_86(val, _values, result)
    while_quad 3
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_87(val, _values, result)
    do_while_quad 1
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_88(val, _values, result)
    do_while_quad 2
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_96(val, _values, result)
     aumenta_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_97(val, _values, result)
     disminuye_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_98(val, _values, result)
     llame_var 
    result
  end
.,.,

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_104(val, _values, result)
     llame_var 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_107(val, _values, result)
     llame_var 
    result
  end
.,.,

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Phast
